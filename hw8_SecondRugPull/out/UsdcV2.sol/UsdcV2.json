{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "Blacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newBlacklister",
          "type": "address"
        }
      ],
      "name": "BlacklisterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMasterMinter",
          "type": "address"
        }
      ],
      "name": "MasterMinterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minterAllowedAmount",
          "type": "uint256"
        }
      ],
      "name": "MinterConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMinter",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "PauserChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "UnBlacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blacklister",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minterAllowedAmount",
          "type": "uint256"
        }
      ],
      "name": "configureMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currency",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenCurrency",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "tokenDecimals",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "newMasterMinter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newPauser",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newBlacklister",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isBlacklisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "masterMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "mintV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "minterAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "transferV2",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "unBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newBlacklister",
          "type": "address"
        }
      ],
      "name": "updateBlacklister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newMasterMinter",
          "type": "address"
        }
      ],
      "name": "updateMasterMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newPauser",
          "type": "address"
        }
      ],
      "name": "updatePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526001805460ff60a01b191690556000600b5534801561002257600080fd5b50600080546001600160a01b031916331790556124c6806100446000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80638456cb591161011a578063ad38bf22116100ad578063dd62ed3e1161007c578063dd62ed3e14610495578063e5a6b10f146104ce578063f2fde38b146104d6578063f9f92be4146104e9578063fe575a87146104fc57600080fd5b8063ad38bf2214610449578063bd1024301461045c578063c76e5b2b1461046f578063cb1718001461048257600080fd5b80639fd0506d116100e95780639fd0506d146103e4578063a9059cbb146103f7578063aa20e1e41461040a578063aa271e1a1461041d57600080fd5b80638456cb591461039a5780638a6db9c3146103a25780638da5cb5b146103cb57806395d89b41146103dc57600080fd5b806335d99f351161019d5780634e44d9561161016c5780634e44d95614610324578063554bab3c146103375780635c975abb1461034a57806370a082311461035e5780637cb647591461038757600080fd5b806335d99f35146102cb5780633f4ba83a146102f657806340c10f19146102fe57806342966c681461031157600080fd5b806323b872dd116101d957806323b872dd146102735780633092afd514610286578063313ce567146102995780633357162b146102b857600080fd5b806306fdde031461020b578063095ea7b31461022957806318160ddd1461024c5780631a8952661461025e575b600080fd5b610213610528565b6040516102209190611cdd565b60405180910390f35b61023c610237366004611d42565b6105b6565b6040519015158152602001610220565b600b545b604051908152602001610220565b61027161026c366004611d6c565b61066d565b005b61023c610281366004611d87565b6106e0565b61023c610294366004611d6c565b6108a2565b6006546102a69060ff1681565b60405160ff9091168152602001610220565b6102716102c6366004611e8b565b61092b565b6008546102de906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b610271610b94565b61023c61030c366004611d42565b610bf6565b61027161031f366004611f67565b610eec565b61023c610332366004611d42565b6110e9565b610271610345366004611d6c565b6111ab565b60015461023c90600160a01b900460ff1681565b61025061036c366004611d6c565b6001600160a01b031660009081526009602052604090205490565b610271610395366004611f67565b611286565b6102716112b5565b6102506103b0366004611d6c565b6001600160a01b03166000908152600d602052604090205490565b6000546001600160a01b03166102de565b61021361131d565b6001546102de906001600160a01b031681565b61023c610405366004611d42565b61132a565b610271610418366004611d6c565b6113cd565b61023c61042b366004611d6c565b6001600160a01b03166000908152600c602052604090205460ff1690565b610271610457366004611d6c565b611467565b6002546102de906001600160a01b031681565b61023c61047d366004612000565b61154c565b610271610490366004612057565b6115a1565b6102506104a336600461209e565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205490565b610213611692565b6102716104e4366004611d6c565b61169f565b6102716104f7366004611d6c565b611781565b61023c61050a366004611d6c565b6001600160a01b031660009081526003602052604090205460ff1690565b60048054610535906120d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610561906120d1565b80156105ae5780601f10610583576101008083540402835291602001916105ae565b820191906000526020600020905b81548152906001019060200180831161059157829003601f168201915b505050505081565b600154600090600160a01b900460ff16156105ec5760405162461bcd60e51b81526004016105e39061210b565b60405180910390fd5b3360008181526003602052604090205460ff161561061c5760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038416600090815260036020526040902054849060ff16156106575760405162461bcd60e51b81526004016105e390612135565b6106623386866117f7565b506001949350505050565b6002546001600160a01b031633146106975760405162461bcd60e51b81526004016105e39061217a565b6001600160a01b038116600081815260036020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b600154600090600160a01b900460ff161561070d5760405162461bcd60e51b81526004016105e39061210b565b3360008181526003602052604090205460ff161561073d5760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038516600090815260036020526040902054859060ff16156107785760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038516600090815260036020526040902054859060ff16156107b35760405162461bcd60e51b81526004016105e390612135565b6001600160a01b0387166000908152600a602090815260408083203384529091529020548511156108375760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016105e3565b610842878787611913565b6001600160a01b0387166000908152600a602090815260408083203384529091529020546108709086611af6565b6001600160a01b0388166000908152600a60209081526040808320338452909152902055600193505050509392505050565b6008546000906001600160a01b031633146108cf5760405162461bcd60e51b81526004016105e3906121c6565b6001600160a01b0382166000818152600c60209081526040808320805460ff19169055600d909152808220829055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a25060015b919050565b600854600160a01b900460ff16156109985760405162461bcd60e51b815260206004820152602a60248201527f46696174546f6b656e3a20636f6e747261637420697320616c726561647920696044820152691b9a5d1a585b1a5e995960b21b60648201526084016105e3565b6001600160a01b0384166109be5760405162461bcd60e51b81526004016105e39061220f565b6001600160a01b038316610a265760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206e65772070617573657220697320746865207a65726044820152686f206164647265737360b81b60648201526084016105e3565b6001600160a01b038216610a935760405162461bcd60e51b815260206004820152602e60248201527f46696174546f6b656e3a206e657720626c61636b6c697374657220697320746860448201526d65207a65726f206164647265737360901b60648201526084016105e3565b6001600160a01b038116610afa5760405162461bcd60e51b815260206004820152602860248201527f46696174546f6b656e3a206e6577206f776e657220697320746865207a65726f604482015267206164647265737360c01b60648201526084016105e3565b6004610b0689826122ad565b506005610b1388826122ad565b506007610b2087826122ad565b506006805460ff191660ff8716179055600880546001600160a01b03199081166001600160a01b038781169190911790925560018054821686841617905560028054909116918416919091179055610b7781611b3f565b50506008805460ff60a01b1916600160a01b179055505050505050565b6001546001600160a01b03163314610bbe5760405162461bcd60e51b81526004016105e39061236d565b6001805460ff60a01b191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600154600090600160a01b900460ff1615610c235760405162461bcd60e51b81526004016105e39061210b565b336000908152600c602052604090205460ff16610c525760405162461bcd60e51b81526004016105e3906123af565b3360008181526003602052604090205460ff1615610c825760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038416600090815260036020526040902054849060ff1615610cbd5760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038516610d1f5760405162461bcd60e51b815260206004820152602360248201527f46696174546f6b656e3a206d696e7420746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e3565b60008411610d815760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206d696e7420616d6f756e74206e6f7420677265617460448201526806572207468616e20360bc1b60648201526084016105e3565b336000908152600d602052604090205480851115610df85760405162461bcd60e51b815260206004820152602e60248201527f46696174546f6b656e3a206d696e7420616d6f756e742065786365656473206d60448201526d696e746572416c6c6f77616e636560901b60648201526084016105e3565b600b54610e059086611b61565b600b556001600160a01b038616600090815260096020526040902054610e2b9086611b61565b6001600160a01b038716600090815260096020526040902055610e4e8186611af6565b336000818152600d602090815260409182902093909355518781526001600160a01b038916927fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8910160405180910390a36040518581526001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600195945050505050565b600154600160a01b900460ff1615610f165760405162461bcd60e51b81526004016105e39061210b565b336000908152600c602052604090205460ff16610f455760405162461bcd60e51b81526004016105e3906123af565b3360008181526003602052604090205460ff1615610f755760405162461bcd60e51b81526004016105e390612135565b3360009081526009602052604090205482610fe45760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206275726e20616d6f756e74206e6f7420677265617460448201526806572207468616e20360bc1b60648201526084016105e3565b828110156110435760405162461bcd60e51b815260206004820152602660248201527f46696174546f6b656e3a206275726e20616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105e3565b600b546110509084611af6565b600b5561105d8184611af6565b33600081815260096020526040908190209290925590517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5906110a39086815260200190565b60405180910390a260405183815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a3505050565b600154600090600160a01b900460ff16156111165760405162461bcd60e51b81526004016105e39061210b565b6008546001600160a01b031633146111405760405162461bcd60e51b81526004016105e3906121c6565b6001600160a01b0383166000818152600c60209081526040808320805460ff19166001179055600d82529182902085905590518481527f46980fca912ef9bcdbd36877427b6b90e860769f604e89c0e67720cece530d20910160405180910390a25060015b92915050565b6000546001600160a01b031633146111d55760405162461bcd60e51b81526004016105e3906123f0565b6001600160a01b03811661123c5760405162461bcd60e51b815260206004820152602860248201527f5061757361626c653a206e65772070617573657220697320746865207a65726f604482015267206164647265737360c01b60648201526084016105e3565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fb80482a293ca2e013eda8683c9bd7fc8347cfdaeea5ede58cba46df502c2a60490600090a250565b6000546001600160a01b031633146112b05760405162461bcd60e51b81526004016105e3906123f0565b600e55565b6001546001600160a01b031633146112df5760405162461bcd60e51b81526004016105e39061236d565b6001805460ff60a01b1916600160a01b1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b60058054610535906120d1565b600154600090600160a01b900460ff16156113575760405162461bcd60e51b81526004016105e39061210b565b3360008181526003602052604090205460ff16156113875760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038416600090815260036020526040902054849060ff16156113c25760405162461bcd60e51b81526004016105e390612135565b610662338686611913565b6000546001600160a01b031633146113f75760405162461bcd60e51b81526004016105e3906123f0565b6001600160a01b03811661141d5760405162461bcd60e51b81526004016105e39061220f565b600880546001600160a01b0319166001600160a01b0383169081179091556040517fdb66dfa9c6b8f5226fe9aac7e51897ae8ee94ac31dc70bb6c9900b2574b707e690600090a250565b6000546001600160a01b031633146114915760405162461bcd60e51b81526004016105e3906123f0565b6001600160a01b0381166115025760405162461bcd60e51b815260206004820152603260248201527f426c61636b6c69737461626c653a206e657720626c61636b6c697374657220696044820152717320746865207a65726f206164647265737360701b60648201526084016105e3565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b6000816115598133611bc0565b6113c25760405162461bcd60e51b81526020600482015260196024820152782bb434ba32b634b9ba1d1024b73b30b634b210383937b7b31760391b60448201526064016105e3565b806115ac8133611bc0565b6115f45760405162461bcd60e51b81526020600482015260196024820152782bb434ba32b634b9ba1d1024b73b30b634b210383937b7b31760391b60448201526064016105e3565b600083116116535760405162461bcd60e51b815260206004820152602660248201527f6d696e7456323a206d696e7420616d6f756e74206e6f7420677265617465722060448201526507468616e20360d41b60648201526084016105e3565b600b546116609084611b61565b600b553360009081526009602052604090205461167d9084611b61565b33600090815260096020526040902055505050565b60078054610535906120d1565b6000546001600160a01b031633146116c95760405162461bcd60e51b81526004016105e3906123f0565b6001600160a01b03811661172e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e3565b600054604080516001600160a01b03928316815291831660208301527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0910160405180910390a161177e81611b3f565b50565b6002546001600160a01b031633146117ab5760405162461bcd60e51b81526004016105e39061217a565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b0383166118595760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105e3565b6001600160a01b0382166118ba5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105e3565b6001600160a01b038381166000818152600a602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591016110dc565b6001600160a01b0383166119775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105e3565b6001600160a01b0382166119d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e3565b6001600160a01b038316600090815260096020526040902054811115611a505760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105e3565b6001600160a01b038316600090815260096020526040902054611a739082611af6565b6001600160a01b038085166000908152600960205260408082209390935590841681522054611aa29082611b61565b6001600160a01b0380841660008181526009602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906110dc9085815260200190565b6000611b3883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c11565b9392505050565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080611b6e838561243b565b905083811015611b385760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105e3565b6040516bffffffffffffffffffffffff19606083901b1660208201526000908190603401604051602081830303815290604052805190602001209050611c0984600e5483611c4b565b949350505050565b60008184841115611c355760405162461bcd60e51b81526004016105e39190611cdd565b506000611c42848661244e565b95945050505050565b600082611c588584611c61565b14949350505050565b600081815b8451811015611ca657611c9282868381518110611c8557611c85612461565b6020026020010151611cae565b915080611c9e81612477565b915050611c66565b509392505050565b6000818310611cca576000828152602084905260409020611b38565b6000838152602083905260409020611b38565b600060208083528351808285015260005b81811015611d0a57858101830151858201604001528201611cee565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461092657600080fd5b60008060408385031215611d5557600080fd5b611d5e83611d2b565b946020939093013593505050565b600060208284031215611d7e57600080fd5b611b3882611d2b565b600080600060608486031215611d9c57600080fd5b611da584611d2b565b9250611db360208501611d2b565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611e0257611e02611dc3565b604052919050565b600082601f830112611e1b57600080fd5b813567ffffffffffffffff811115611e3557611e35611dc3565b611e48601f8201601f1916602001611dd9565b818152846020838601011115611e5d57600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff8116811461092657600080fd5b600080600080600080600080610100898b031215611ea857600080fd5b883567ffffffffffffffff80821115611ec057600080fd5b611ecc8c838d01611e0a565b995060208b0135915080821115611ee257600080fd5b611eee8c838d01611e0a565b985060408b0135915080821115611f0457600080fd5b50611f118b828c01611e0a565b965050611f2060608a01611e7a565b9450611f2e60808a01611d2b565b9350611f3c60a08a01611d2b565b9250611f4a60c08a01611d2b565b9150611f5860e08a01611d2b565b90509295985092959890939650565b600060208284031215611f7957600080fd5b5035919050565b600082601f830112611f9157600080fd5b8135602067ffffffffffffffff821115611fad57611fad611dc3565b8160051b611fbc828201611dd9565b9283528481018201928281019087851115611fd657600080fd5b83870192505b84831015611ff557823582529183019190830190611fdc565b979650505050505050565b60008060006060848603121561201557600080fd5b61201e84611d2b565b925060208401359150604084013567ffffffffffffffff81111561204157600080fd5b61204d86828701611f80565b9150509250925092565b6000806040838503121561206a57600080fd5b82359150602083013567ffffffffffffffff81111561208857600080fd5b61209485828601611f80565b9150509250929050565b600080604083850312156120b157600080fd5b6120ba83611d2b565b91506120c860208401611d2b565b90509250929050565b600181811c908216806120e557607f821691505b60208210810361210557634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526025908201527f426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c6040820152641a5cdd195960da1b606082015260800190565b6020808252602c908201527f426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686560408201526b10313630b1b5b634b9ba32b960a11b606082015260800190565b60208082526029908201527f46696174546f6b656e3a2063616c6c6572206973206e6f7420746865206d61736040820152683a32b926b4b73a32b960b91b606082015260800190565b6020808252602f908201527f46696174546f6b656e3a206e6577206d61737465724d696e746572206973207460408201526e6865207a65726f206164647265737360881b606082015260800190565b601f8211156122a857600081815260208120601f850160051c810160208610156122855750805b601f850160051c820191505b818110156122a457828155600101612291565b5050505b505050565b815167ffffffffffffffff8111156122c7576122c7611dc3565b6122db816122d584546120d1565b8461225e565b602080601f83116001811461231057600084156122f85750858301515b600019600386901b1c1916600185901b1785556122a4565b600085815260208120601f198616915b8281101561233f57888601518255948401946001909101908401612320565b508582101561235d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526022908201527f5061757361626c653a2063616c6c6572206973206e6f7420746865207061757360408201526132b960f11b606082015260800190565b60208082526021908201527f46696174546f6b656e3a2063616c6c6572206973206e6f742061206d696e74656040820152603960f91b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156111a5576111a5612425565b818103818111156111a5576111a5612425565b634e487b7160e01b600052603260045260246000fd5b60006001820161248957612489612425565b506001019056fea2646970667358221220dd4b2862b52ed6abf49ee510233628c906ec8b212a1277862f0e3a10ddd1625d64736f6c63430008150033",
    "sourceMap": "168:1203:22:-:0;;;14987:26:21;;;-1:-1:-1;;;;14987:26:21;;;15008:5;20953:33;;168:1203:22;;;;;;;;;-1:-1:-1;12251:6:21;:17;;-1:-1:-1;;;;;;12251:17:21;11935:10;12251:17;;;168:1203:22;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c80638456cb591161011a578063ad38bf22116100ad578063dd62ed3e1161007c578063dd62ed3e14610495578063e5a6b10f146104ce578063f2fde38b146104d6578063f9f92be4146104e9578063fe575a87146104fc57600080fd5b8063ad38bf2214610449578063bd1024301461045c578063c76e5b2b1461046f578063cb1718001461048257600080fd5b80639fd0506d116100e95780639fd0506d146103e4578063a9059cbb146103f7578063aa20e1e41461040a578063aa271e1a1461041d57600080fd5b80638456cb591461039a5780638a6db9c3146103a25780638da5cb5b146103cb57806395d89b41146103dc57600080fd5b806335d99f351161019d5780634e44d9561161016c5780634e44d95614610324578063554bab3c146103375780635c975abb1461034a57806370a082311461035e5780637cb647591461038757600080fd5b806335d99f35146102cb5780633f4ba83a146102f657806340c10f19146102fe57806342966c681461031157600080fd5b806323b872dd116101d957806323b872dd146102735780633092afd514610286578063313ce567146102995780633357162b146102b857600080fd5b806306fdde031461020b578063095ea7b31461022957806318160ddd1461024c5780631a8952661461025e575b600080fd5b610213610528565b6040516102209190611cdd565b60405180910390f35b61023c610237366004611d42565b6105b6565b6040519015158152602001610220565b600b545b604051908152602001610220565b61027161026c366004611d6c565b61066d565b005b61023c610281366004611d87565b6106e0565b61023c610294366004611d6c565b6108a2565b6006546102a69060ff1681565b60405160ff9091168152602001610220565b6102716102c6366004611e8b565b61092b565b6008546102de906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b610271610b94565b61023c61030c366004611d42565b610bf6565b61027161031f366004611f67565b610eec565b61023c610332366004611d42565b6110e9565b610271610345366004611d6c565b6111ab565b60015461023c90600160a01b900460ff1681565b61025061036c366004611d6c565b6001600160a01b031660009081526009602052604090205490565b610271610395366004611f67565b611286565b6102716112b5565b6102506103b0366004611d6c565b6001600160a01b03166000908152600d602052604090205490565b6000546001600160a01b03166102de565b61021361131d565b6001546102de906001600160a01b031681565b61023c610405366004611d42565b61132a565b610271610418366004611d6c565b6113cd565b61023c61042b366004611d6c565b6001600160a01b03166000908152600c602052604090205460ff1690565b610271610457366004611d6c565b611467565b6002546102de906001600160a01b031681565b61023c61047d366004612000565b61154c565b610271610490366004612057565b6115a1565b6102506104a336600461209e565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205490565b610213611692565b6102716104e4366004611d6c565b61169f565b6102716104f7366004611d6c565b611781565b61023c61050a366004611d6c565b6001600160a01b031660009081526003602052604090205460ff1690565b60048054610535906120d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610561906120d1565b80156105ae5780601f10610583576101008083540402835291602001916105ae565b820191906000526020600020905b81548152906001019060200180831161059157829003601f168201915b505050505081565b600154600090600160a01b900460ff16156105ec5760405162461bcd60e51b81526004016105e39061210b565b60405180910390fd5b3360008181526003602052604090205460ff161561061c5760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038416600090815260036020526040902054849060ff16156106575760405162461bcd60e51b81526004016105e390612135565b6106623386866117f7565b506001949350505050565b6002546001600160a01b031633146106975760405162461bcd60e51b81526004016105e39061217a565b6001600160a01b038116600081815260036020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b600154600090600160a01b900460ff161561070d5760405162461bcd60e51b81526004016105e39061210b565b3360008181526003602052604090205460ff161561073d5760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038516600090815260036020526040902054859060ff16156107785760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038516600090815260036020526040902054859060ff16156107b35760405162461bcd60e51b81526004016105e390612135565b6001600160a01b0387166000908152600a602090815260408083203384529091529020548511156108375760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084016105e3565b610842878787611913565b6001600160a01b0387166000908152600a602090815260408083203384529091529020546108709086611af6565b6001600160a01b0388166000908152600a60209081526040808320338452909152902055600193505050509392505050565b6008546000906001600160a01b031633146108cf5760405162461bcd60e51b81526004016105e3906121c6565b6001600160a01b0382166000818152600c60209081526040808320805460ff19169055600d909152808220829055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a25060015b919050565b600854600160a01b900460ff16156109985760405162461bcd60e51b815260206004820152602a60248201527f46696174546f6b656e3a20636f6e747261637420697320616c726561647920696044820152691b9a5d1a585b1a5e995960b21b60648201526084016105e3565b6001600160a01b0384166109be5760405162461bcd60e51b81526004016105e39061220f565b6001600160a01b038316610a265760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206e65772070617573657220697320746865207a65726044820152686f206164647265737360b81b60648201526084016105e3565b6001600160a01b038216610a935760405162461bcd60e51b815260206004820152602e60248201527f46696174546f6b656e3a206e657720626c61636b6c697374657220697320746860448201526d65207a65726f206164647265737360901b60648201526084016105e3565b6001600160a01b038116610afa5760405162461bcd60e51b815260206004820152602860248201527f46696174546f6b656e3a206e6577206f776e657220697320746865207a65726f604482015267206164647265737360c01b60648201526084016105e3565b6004610b0689826122ad565b506005610b1388826122ad565b506007610b2087826122ad565b506006805460ff191660ff8716179055600880546001600160a01b03199081166001600160a01b038781169190911790925560018054821686841617905560028054909116918416919091179055610b7781611b3f565b50506008805460ff60a01b1916600160a01b179055505050505050565b6001546001600160a01b03163314610bbe5760405162461bcd60e51b81526004016105e39061236d565b6001805460ff60a01b191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600154600090600160a01b900460ff1615610c235760405162461bcd60e51b81526004016105e39061210b565b336000908152600c602052604090205460ff16610c525760405162461bcd60e51b81526004016105e3906123af565b3360008181526003602052604090205460ff1615610c825760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038416600090815260036020526040902054849060ff1615610cbd5760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038516610d1f5760405162461bcd60e51b815260206004820152602360248201527f46696174546f6b656e3a206d696e7420746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e3565b60008411610d815760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206d696e7420616d6f756e74206e6f7420677265617460448201526806572207468616e20360bc1b60648201526084016105e3565b336000908152600d602052604090205480851115610df85760405162461bcd60e51b815260206004820152602e60248201527f46696174546f6b656e3a206d696e7420616d6f756e742065786365656473206d60448201526d696e746572416c6c6f77616e636560901b60648201526084016105e3565b600b54610e059086611b61565b600b556001600160a01b038616600090815260096020526040902054610e2b9086611b61565b6001600160a01b038716600090815260096020526040902055610e4e8186611af6565b336000818152600d602090815260409182902093909355518781526001600160a01b038916927fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8910160405180910390a36040518581526001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600195945050505050565b600154600160a01b900460ff1615610f165760405162461bcd60e51b81526004016105e39061210b565b336000908152600c602052604090205460ff16610f455760405162461bcd60e51b81526004016105e3906123af565b3360008181526003602052604090205460ff1615610f755760405162461bcd60e51b81526004016105e390612135565b3360009081526009602052604090205482610fe45760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206275726e20616d6f756e74206e6f7420677265617460448201526806572207468616e20360bc1b60648201526084016105e3565b828110156110435760405162461bcd60e51b815260206004820152602660248201527f46696174546f6b656e3a206275726e20616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105e3565b600b546110509084611af6565b600b5561105d8184611af6565b33600081815260096020526040908190209290925590517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5906110a39086815260200190565b60405180910390a260405183815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a3505050565b600154600090600160a01b900460ff16156111165760405162461bcd60e51b81526004016105e39061210b565b6008546001600160a01b031633146111405760405162461bcd60e51b81526004016105e3906121c6565b6001600160a01b0383166000818152600c60209081526040808320805460ff19166001179055600d82529182902085905590518481527f46980fca912ef9bcdbd36877427b6b90e860769f604e89c0e67720cece530d20910160405180910390a25060015b92915050565b6000546001600160a01b031633146111d55760405162461bcd60e51b81526004016105e3906123f0565b6001600160a01b03811661123c5760405162461bcd60e51b815260206004820152602860248201527f5061757361626c653a206e65772070617573657220697320746865207a65726f604482015267206164647265737360c01b60648201526084016105e3565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fb80482a293ca2e013eda8683c9bd7fc8347cfdaeea5ede58cba46df502c2a60490600090a250565b6000546001600160a01b031633146112b05760405162461bcd60e51b81526004016105e3906123f0565b600e55565b6001546001600160a01b031633146112df5760405162461bcd60e51b81526004016105e39061236d565b6001805460ff60a01b1916600160a01b1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b60058054610535906120d1565b600154600090600160a01b900460ff16156113575760405162461bcd60e51b81526004016105e39061210b565b3360008181526003602052604090205460ff16156113875760405162461bcd60e51b81526004016105e390612135565b6001600160a01b038416600090815260036020526040902054849060ff16156113c25760405162461bcd60e51b81526004016105e390612135565b610662338686611913565b6000546001600160a01b031633146113f75760405162461bcd60e51b81526004016105e3906123f0565b6001600160a01b03811661141d5760405162461bcd60e51b81526004016105e39061220f565b600880546001600160a01b0319166001600160a01b0383169081179091556040517fdb66dfa9c6b8f5226fe9aac7e51897ae8ee94ac31dc70bb6c9900b2574b707e690600090a250565b6000546001600160a01b031633146114915760405162461bcd60e51b81526004016105e3906123f0565b6001600160a01b0381166115025760405162461bcd60e51b815260206004820152603260248201527f426c61636b6c69737461626c653a206e657720626c61636b6c697374657220696044820152717320746865207a65726f206164647265737360701b60648201526084016105e3565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b6000816115598133611bc0565b6113c25760405162461bcd60e51b81526020600482015260196024820152782bb434ba32b634b9ba1d1024b73b30b634b210383937b7b31760391b60448201526064016105e3565b806115ac8133611bc0565b6115f45760405162461bcd60e51b81526020600482015260196024820152782bb434ba32b634b9ba1d1024b73b30b634b210383937b7b31760391b60448201526064016105e3565b600083116116535760405162461bcd60e51b815260206004820152602660248201527f6d696e7456323a206d696e7420616d6f756e74206e6f7420677265617465722060448201526507468616e20360d41b60648201526084016105e3565b600b546116609084611b61565b600b553360009081526009602052604090205461167d9084611b61565b33600090815260096020526040902055505050565b60078054610535906120d1565b6000546001600160a01b031633146116c95760405162461bcd60e51b81526004016105e3906123f0565b6001600160a01b03811661172e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e3565b600054604080516001600160a01b03928316815291831660208301527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0910160405180910390a161177e81611b3f565b50565b6002546001600160a01b031633146117ab5760405162461bcd60e51b81526004016105e39061217a565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b0383166118595760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105e3565b6001600160a01b0382166118ba5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105e3565b6001600160a01b038381166000818152600a602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591016110dc565b6001600160a01b0383166119775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105e3565b6001600160a01b0382166119d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e3565b6001600160a01b038316600090815260096020526040902054811115611a505760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105e3565b6001600160a01b038316600090815260096020526040902054611a739082611af6565b6001600160a01b038085166000908152600960205260408082209390935590841681522054611aa29082611b61565b6001600160a01b0380841660008181526009602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906110dc9085815260200190565b6000611b3883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611c11565b9392505050565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080611b6e838561243b565b905083811015611b385760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105e3565b6040516bffffffffffffffffffffffff19606083901b1660208201526000908190603401604051602081830303815290604052805190602001209050611c0984600e5483611c4b565b949350505050565b60008184841115611c355760405162461bcd60e51b81526004016105e39190611cdd565b506000611c42848661244e565b95945050505050565b600082611c588584611c61565b14949350505050565b600081815b8451811015611ca657611c9282868381518110611c8557611c85612461565b6020026020010151611cae565b915080611c9e81612477565b915050611c66565b509392505050565b6000818310611cca576000828152602084905260409020611b38565b6000838152602083905260409020611b38565b600060208083528351808285015260005b81811015611d0a57858101830151858201604001528201611cee565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461092657600080fd5b60008060408385031215611d5557600080fd5b611d5e83611d2b565b946020939093013593505050565b600060208284031215611d7e57600080fd5b611b3882611d2b565b600080600060608486031215611d9c57600080fd5b611da584611d2b565b9250611db360208501611d2b565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611e0257611e02611dc3565b604052919050565b600082601f830112611e1b57600080fd5b813567ffffffffffffffff811115611e3557611e35611dc3565b611e48601f8201601f1916602001611dd9565b818152846020838601011115611e5d57600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff8116811461092657600080fd5b600080600080600080600080610100898b031215611ea857600080fd5b883567ffffffffffffffff80821115611ec057600080fd5b611ecc8c838d01611e0a565b995060208b0135915080821115611ee257600080fd5b611eee8c838d01611e0a565b985060408b0135915080821115611f0457600080fd5b50611f118b828c01611e0a565b965050611f2060608a01611e7a565b9450611f2e60808a01611d2b565b9350611f3c60a08a01611d2b565b9250611f4a60c08a01611d2b565b9150611f5860e08a01611d2b565b90509295985092959890939650565b600060208284031215611f7957600080fd5b5035919050565b600082601f830112611f9157600080fd5b8135602067ffffffffffffffff821115611fad57611fad611dc3565b8160051b611fbc828201611dd9565b9283528481018201928281019087851115611fd657600080fd5b83870192505b84831015611ff557823582529183019190830190611fdc565b979650505050505050565b60008060006060848603121561201557600080fd5b61201e84611d2b565b925060208401359150604084013567ffffffffffffffff81111561204157600080fd5b61204d86828701611f80565b9150509250925092565b6000806040838503121561206a57600080fd5b82359150602083013567ffffffffffffffff81111561208857600080fd5b61209485828601611f80565b9150509250929050565b600080604083850312156120b157600080fd5b6120ba83611d2b565b91506120c860208401611d2b565b90509250929050565b600181811c908216806120e557607f821691505b60208210810361210557634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526025908201527f426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c6040820152641a5cdd195960da1b606082015260800190565b6020808252602c908201527f426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686560408201526b10313630b1b5b634b9ba32b960a11b606082015260800190565b60208082526029908201527f46696174546f6b656e3a2063616c6c6572206973206e6f7420746865206d61736040820152683a32b926b4b73a32b960b91b606082015260800190565b6020808252602f908201527f46696174546f6b656e3a206e6577206d61737465724d696e746572206973207460408201526e6865207a65726f206164647265737360881b606082015260800190565b601f8211156122a857600081815260208120601f850160051c810160208610156122855750805b601f850160051c820191505b818110156122a457828155600101612291565b5050505b505050565b815167ffffffffffffffff8111156122c7576122c7611dc3565b6122db816122d584546120d1565b8461225e565b602080601f83116001811461231057600084156122f85750858301515b600019600386901b1c1916600185901b1785556122a4565b600085815260208120601f198616915b8281101561233f57888601518255948401946001909101908401612320565b508582101561235d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526022908201527f5061757361626c653a2063616c6c6572206973206e6f7420746865207061757360408201526132b960f11b606082015260800190565b60208082526021908201527f46696174546f6b656e3a2063616c6c6572206973206e6f742061206d696e74656040820152603960f91b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156111a5576111a5612425565b818103818111156111a5576111a5612425565b634e487b7160e01b600052603260045260246000fd5b60006001820161248957612489612425565b506001019056fea2646970667358221220dd4b2862b52ed6abf49ee510233628c906ec8b212a1277862f0e3a10ddd1625d64736f6c63430008150033",
    "sourceMap": "168:1203:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20662:18:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25738:273;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:24;;1162:22;1144:41;;1132:2;1117:18;25738:273:21;1004:187:24;25145:100:21;25226:12;;25145:100;;;1342:25:24;;;1330:2;1315:18;25145:100:21;1196:177:24;18829:148:21;;;;;;:::i;:::-;;:::i;:::-;;26789:535;;;;;;:::i;:::-;;:::i;29220:239::-;;;;;;:::i;:::-;;:::i;20712:21::-;;;;;;;;;;;;2074:4:24;2062:17;;;2044:36;;2032:2;2017:18;20712:21:21;1902:184:24;21426:1160:21;;;;;;:::i;:::-;;:::i;20767:27::-;;;;;-1:-1:-1;;;;;20767:27:21;;;;;;-1:-1:-1;;;;;4483:32:24;;;4465:51;;4453:2;4438:18;20767:27:21;4319:203:24;15683:94:21;;;:::i;23110:840::-;;;;;;:::i;:::-;;:::i;29748:538::-;;;;;;:::i;:::-;;:::i;28714:334::-;;;;;;:::i;:::-;;:::i;15834:254::-;;;;;;:::i;:::-;;:::i;14987:26::-;;;;;-1:-1:-1;;;14987:26:21;;;;;;25353:154;;;;;;:::i;:::-;-1:-1:-1;;;;;25483:17:21;25453:7;25483:17;;;:8;:17;;;;;;;25353:154;272:104:22;;;;;;:::i;:::-;;:::i;15504:89:21:-;;;:::i;24331:118::-;;;;;;:::i;:::-;-1:-1:-1;;;;;24421:21:21;24395:7;24421:21;;;:13;:21;;;;;;;24331:118;12058:79;12098:7;12124:6;-1:-1:-1;;;;;12124:6:21;12058:79;;20686:20;;;:::i;14960:21::-;;;;;-1:-1:-1;;;;;14960:21:21;;;27499:259;;;;;;:::i;:::-;;:::i;30292:303::-;;;;;;:::i;:::-;;:::i;24556:104::-;;;;;;:::i;:::-;-1:-1:-1;;;;;24637:16:21;24614:4;24637:16;;;:7;:16;;;;;;;;;24556:104;18983:299;;;;;;:::i;:::-;;:::i;17422:26::-;;;;;-1:-1:-1;;;;;17422:26:21;;;1138:230:22;;;;;;:::i;:::-;;:::i;776:356::-;;;;;;:::i;:::-;;:::i;24911:175:21:-;;;;;;:::i;:::-;-1:-1:-1;;;;;25056:14:21;;;25026:7;25056:14;;;:7;:14;;;;;;;;:23;;;;;;;;;;;;;24911:175;20739:22;;;:::i;12648:269::-;;;;;;:::i;:::-;;:::i;18557:143::-;;;;;;:::i;:::-;;:::i;18334:115::-;;;;;;:::i;:::-;-1:-1:-1;;;;;18421:21:21;18398:4;18421:21;;;:11;:21;;;;;;;;;18334:115;20662:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25738:273::-;15167:6;;25927:4;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;;;;;;;;;25866:10:::1;18121:21;::::0;;;:11:::1;:21;::::0;;;;;::::1;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18121:21:21;::::2;;::::0;;;:11:::2;:21;::::0;;;;;25901:7;;18121:21:::2;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::2;;;;;;;:::i;:::-;25947:36:::3;25956:10;25968:7;25977:5;25947:8;:36::i;:::-;-1:-1:-1::0;26000:4:21::3;::::0;25738:273;-1:-1:-1;;;;25738:273:21:o;18829:148::-;17828:11;;-1:-1:-1;;;;;17828:11:21;17814:10;:25;17793:116;;;;-1:-1:-1;;;17793:116:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;18903:21:21;::::1;18927:5;18903:21:::0;;;:11:::1;:21;::::0;;;;;:29;;-1:-1:-1;;18903:29:21::1;::::0;;18947:23;::::1;::::0;18927:5;18947:23:::1;18829:148:::0;:::o;26789:535::-;15167:6;;27045:4;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;26960:10:::1;18121:21;::::0;;;:11:::1;:21;::::0;;;;;::::1;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18121:21:21;::::2;;::::0;;;:11:::2;:21;::::0;;;;;26995:4;;18121:21:::2;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18121:21:21;::::3;;::::0;;;:11:::3;:21;::::0;;;;;27024:2;;18121:21:::3;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::3;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;27095:13:21;::::4;;::::0;;;:7:::4;:13;::::0;;;;;;;27109:10:::4;27095:25:::0;;;;;;;;27086:34;::::4;;27065:121;;;::::0;-1:-1:-1;;;27065:121:21;;8546:2:24;27065:121:21::4;::::0;::::4;8528:21:24::0;8585:2;8565:18;;;8558:30;8624:34;8604:18;;;8597:62;-1:-1:-1;;;8675:18:24;;;8668:38;8723:19;;27065:121:21::4;8344:404:24::0;27065:121:21::4;27196:26;27206:4;27212:2;27216:5;27196:9;:26::i;:::-;-1:-1:-1::0;;;;;27260:13:21;::::4;;::::0;;;:7:::4;:13;::::0;;;;;;;27274:10:::4;27260:25:::0;;;;;;;;:36:::4;::::0;27290:5;27260:29:::4;:36::i;:::-;-1:-1:-1::0;;;;;27232:13:21;::::4;;::::0;;;:7:::4;:13;::::0;;;;;;;27246:10:::4;27232:25:::0;;;;;;;:64;27313:4:::4;::::0;-1:-1:-1;18215:1:21::3;::::2;15204::::1;26789:535:::0;;;;;:::o;29220:239::-;24117:12;;29317:4;;-1:-1:-1;;;;;24117:12:21;24103:10;:26;24082:114;;;;-1:-1:-1;;;24082:114:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;29337:15:21;::::1;29355:5;29337:15:::0;;;:7:::1;:15;::::0;;;;;;;:23;;-1:-1:-1;;29337:23:21::1;::::0;;29370:13:::1;:21:::0;;;;;;:25;;;29410:21;::::1;::::0;29355:5;29410:21:::1;-1:-1:-1::0;29448:4:21::1;24206:1;29220:239:::0;;;:::o;21426:1160::-;21730:11;;-1:-1:-1;;;21730:11:21;;;;21729:12;21721:67;;;;-1:-1:-1;;;21721:67:21;;9365:2:24;21721:67:21;;;9347:21:24;9404:2;9384:18;;;9377:30;9443:34;9423:18;;;9416:62;-1:-1:-1;;;9494:18:24;;;9487:40;9544:19;;21721:67:21;9163:406:24;21721:67:21;-1:-1:-1;;;;;21819:29:21;;21798:123;;;;-1:-1:-1;;;21798:123:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;21952:23:21;;21931:111;;;;-1:-1:-1;;;21931:111:21;;10192:2:24;21931:111:21;;;10174:21:24;10231:2;10211:18;;;10204:30;10270:34;10250:18;;;10243:62;-1:-1:-1;;;10321:18:24;;;10314:39;10370:19;;21931:111:21;9990:405:24;21931:111:21;-1:-1:-1;;;;;22073:28:21;;22052:121;;;;-1:-1:-1;;;22052:121:21;;10602:2:24;22052:121:21;;;10584:21:24;10641:2;10621:18;;;10614:30;10680:34;10660:18;;;10653:62;-1:-1:-1;;;10731:18:24;;;10724:44;10785:19;;22052:121:21;10400:410:24;22052:121:21;-1:-1:-1;;;;;22204:22:21;;22183:109;;;;-1:-1:-1;;;22183:109:21;;11017:2:24;22183:109:21;;;10999:21:24;11056:2;11036:18;;;11029:30;11095:34;11075:18;;;11068:62;-1:-1:-1;;;11146:18:24;;;11139:38;11194:19;;22183:109:21;10815:404:24;22183:109:21;22303:4;:16;22310:9;22303:4;:16;:::i;:::-;-1:-1:-1;22329:6:21;:20;22338:11;22329:6;:20;:::i;:::-;-1:-1:-1;22359:8:21;:24;22370:13;22359:8;:24;:::i;:::-;-1:-1:-1;22393:8:21;:24;;-1:-1:-1;;22393:24:21;;;;;;;22427:12;:30;;-1:-1:-1;;;;;;22427:30:21;;;-1:-1:-1;;;;;22427:30:21;;;;;;;;;;-1:-1:-1;22467:18:21;;;;;;;;;;22495:11;:28;;;;;;;;;;;;;;22533:18;22542:8;22533;:18::i;:::-;-1:-1:-1;;22561:11:21;:18;;-1:-1:-1;;;;22561:18:21;-1:-1:-1;;;22561:18:21;;;-1:-1:-1;;;;;;21426:1160:21:o;15683:94::-;15354:6;;-1:-1:-1;;;;;15354:6:21;15340:10;:20;15332:67;;;;-1:-1:-1;;;15332:67:21;;;;;;;:::i;:::-;15732:6:::1;:14:::0;;-1:-1:-1;;;;15732:14:21::1;::::0;;15761:9:::1;::::0;::::1;::::0;15741:5:::1;::::0;15761:9:::1;15683:94::o:0;23110:840::-;15167:6;;23293:4;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;22721:10:::1;22713:19;::::0;;;:7:::1;:19;::::0;;;;;::::1;;22705:65;;;;-1:-1:-1::0;;;22705:65:21::1;;;;;;;:::i;:::-;23236:10:::2;18121:21;::::0;;;:11:::2;:21;::::0;;;;;::::2;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18121:21:21;::::3;;::::0;;;:11:::3;:21;::::0;;;;;23271:3;;18121:21:::3;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::3;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;23321:17:21;::::4;23313:65;;;::::0;-1:-1:-1;;;23313:65:21;;14435:2:24;23313:65:21::4;::::0;::::4;14417:21:24::0;14474:2;14454:18;;;14447:30;14513:34;14493:18;;;14486:62;-1:-1:-1;;;14564:18:24;;;14557:33;14607:19;;23313:65:21::4;14233:399:24::0;23313:65:21::4;23406:1;23396:7;:11;23388:65;;;::::0;-1:-1:-1;;;23388:65:21;;14839:2:24;23388:65:21::4;::::0;::::4;14821:21:24::0;14878:2;14858:18;;;14851:30;14917:34;14897:18;;;14890:62;-1:-1:-1;;;14968:18:24;;;14961:39;15017:19;;23388:65:21::4;14637:405:24::0;23388:65:21::4;23509:10;23464:28;23495:25:::0;;;:13:::4;:25;::::0;;;;;23551:31;;::::4;;23530:124;;;::::0;-1:-1:-1;;;23530:124:21;;15249:2:24;23530:124:21::4;::::0;::::4;15231:21:24::0;15288:2;15268:18;;;15261:30;15327:34;15307:18;;;15300:62;-1:-1:-1;;;15378:18:24;;;15371:44;15432:19;;23530:124:21::4;15047:410:24::0;23530:124:21::4;23680:12;::::0;:25:::4;::::0;23697:7;23680:16:::4;:25::i;:::-;23665:12;:40:::0;-1:-1:-1;;;;;23731:13:21;::::4;;::::0;;;:8:::4;:13;::::0;;;;;:26:::4;::::0;23749:7;23731:17:::4;:26::i;:::-;-1:-1:-1::0;;;;;23715:13:21;::::4;;::::0;;;:8:::4;:13;::::0;;;;:42;23795:33:::4;:20:::0;23820:7;23795:24:::4;:33::i;:::-;23781:10;23767:25;::::0;;;:13:::4;:25;::::0;;;;;;;;:61;;;;23843:30;1342:25:24;;;-1:-1:-1;;;;;23843:30:21;::::4;::::0;::::4;::::0;1315:18:24;23843:30:21::4;;;;;;;23888:34;::::0;1342:25:24;;;-1:-1:-1;;;;;23888:34:21;::::4;::::0;23905:1:::4;::::0;23888:34:::4;::::0;1330:2:24;1315:18;23888:34:21::4;;;;;;;-1:-1:-1::0;23939:4:21::4;::::0;23110:840;-1:-1:-1;;;;;23110:840:21:o;29748:538::-;15167:6;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;22721:10:::1;22713:19;::::0;;;:7:::1;:19;::::0;;;;;::::1;;22705:65;;;;-1:-1:-1::0;;;22705:65:21::1;;;;;;;:::i;:::-;29861:10:::2;18121:21;::::0;;;:11:::2;:21;::::0;;;;;::::2;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::2;;;;;;;:::i;:::-;29914:10:::3;29887:15;29905:20:::0;;;:8:::3;:20;::::0;;;;;29943:11;29935:65:::3;;;::::0;-1:-1:-1;;;29935:65:21;;15664:2:24;29935:65:21::3;::::0;::::3;15646:21:24::0;15703:2;15683:18;;;15676:30;15742:34;15722:18;;;15715:62;-1:-1:-1;;;15793:18:24;;;15786:39;15842:19;;29935:65:21::3;15462:405:24::0;29935:65:21::3;30029:7;30018;:18;;30010:69;;;::::0;-1:-1:-1;;;30010:69:21;;16074:2:24;30010:69:21::3;::::0;::::3;16056:21:24::0;16113:2;16093:18;;;16086:30;16152:34;16132:18;;;16125:62;-1:-1:-1;;;16203:18:24;;;16196:36;16249:19;;30010:69:21::3;15872:402:24::0;30010:69:21::3;30105:12;::::0;:25:::3;::::0;30122:7;30105:16:::3;:25::i;:::-;30090:12;:40:::0;30163:20:::3;:7:::0;30175;30163:11:::3;:20::i;:::-;30149:10;30140:20;::::0;;;:8:::3;:20;::::0;;;;;;:43;;;;30198:25;;::::3;::::0;::::3;::::0;30215:7;1342:25:24;;1330:2;1315:18;;1196:177;30198:25:21::3;;;;;;;;30238:41;::::0;1342:25:24;;;30267:1:21::3;::::0;30247:10:::3;::::0;30238:41:::3;::::0;1330:2:24;1315:18;30238:41:21::3;;;;;;;;29877:409;22780:1:::2;29748:538:::0;:::o;28714:334::-;15167:6;;28865:4;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;24117:12:::1;::::0;-1:-1:-1;;;;;24117:12:21::1;24103:10;:26;24082:114;;;;-1:-1:-1::0;;;24082:114:21::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;28885:15:21;::::2;;::::0;;;:7:::2;:15;::::0;;;;;;;:22;;-1:-1:-1;;28885:22:21::2;28903:4;28885:22;::::0;;28917:13:::2;:21:::0;;;;;;:43;;;28975:45;;1342:25:24;;;28975:45:21::2;::::0;1315:18:24;28975:45:21::2;;;;;;;-1:-1:-1::0;29037:4:21::2;24206:1;28714:334:::0;;;;:::o;15834:254::-;12416:6;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;15926:24:21;::::1;15905:111;;;::::0;-1:-1:-1;;;15905:111:21;;16842:2:24;15905:111:21::1;::::0;::::1;16824:21:24::0;16881:2;16861:18;;;16854:30;16920:34;16900:18;;;16893:62;-1:-1:-1;;;16971:18:24;;;16964:38;17019:19;;15905:111:21::1;16640:404:24::0;15905:111:21::1;16026:6;:19:::0;;-1:-1:-1;;;;;;16026:19:21::1;-1:-1:-1::0;;;;;16026:19:21;::::1;::::0;;::::1;::::0;;;16060:21:::1;::::0;::::1;::::0;-1:-1:-1;;16060:21:21::1;15834:254:::0;:::o;272:104:22:-;12416:6:21;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;345:10:22::1;:24:::0;272:104::o;15504:89:21:-;15354:6;;-1:-1:-1;;;;;15354:6:21;15340:10;:20;15332:67;;;;-1:-1:-1;;;15332:67:21;;;;;;;:::i;:::-;15560:4:::1;15551:13:::0;;-1:-1:-1;;;;15551:13:21::1;-1:-1:-1::0;;;15551:13:21::1;::::0;;15579:7:::1;::::0;::::1;::::0;15551:13;;15579:7:::1;15504:89::o:0;20686:20::-;;;;;;;:::i;27499:259::-;15167:6;;27678:4;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;27622:10:::1;18121:21;::::0;;;:11:::1;:21;::::0;;;;;::::1;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18121:21:21;::::2;;::::0;;;:11:::2;:21;::::0;;;;;27657:2;;18121:21:::2;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::2;;;;;;;:::i;:::-;27698:32:::3;27708:10;27720:2;27724:5;27698:9;:32::i;30292:303::-:0;12416:6;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;30396:30:21;::::1;30375:124;;;;-1:-1:-1::0;;;30375:124:21::1;;;;;;;:::i;:::-;30509:12;:31:::0;;-1:-1:-1;;;;;;30509:31:21::1;-1:-1:-1::0;;;;;30509:31:21;::::1;::::0;;::::1;::::0;;;30555:33:::1;::::0;::::1;::::0;-1:-1:-1;;30555:33:21::1;30292:303:::0;:::o;18983:299::-;12416:6;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;19085:29:21;::::1;19064:126;;;::::0;-1:-1:-1;;;19064:126:21;;17251:2:24;19064:126:21::1;::::0;::::1;17233:21:24::0;17290:2;17270:18;;;17263:30;17329:34;17309:18;;;17302:62;-1:-1:-1;;;17380:18:24;;;17373:48;17438:19;;19064:126:21::1;17049:414:24::0;19064:126:21::1;19200:11;:29:::0;;-1:-1:-1;;;;;;19200:29:21::1;-1:-1:-1::0;;;;;19200:29:21;::::1;::::0;;::::1;::::0;;;19244:31:::1;::::0;::::1;::::0;-1:-1:-1;;19244:31:21::1;18983:299:::0;:::o;1138:230:22:-;1288:4;1257:12;686:37;698:12;712:10;686:11;:37::i;:::-;678:74;;;;-1:-1:-1;;;678:74:22;;17670:2:24;678:74:22;;;17652:21:24;17709:2;17689:18;;;17682:30;-1:-1:-1;;;17728:18:24;;;17721:55;17793:18;;678:74:22;17468:349:24;776:356:22;881:12;686:37;698:12;712:10;686:11;:37::i;:::-;678:74;;;;-1:-1:-1;;;678:74:22;;17670:2:24;678:74:22;;;17652:21:24;17709:2;17689:18;;;17682:30;-1:-1:-1;;;17728:18:24;;;17721:55;17793:18;;678:74:22;17468:349:24;678:74:22;927:1:::1;917:7;:11;909:62;;;::::0;-1:-1:-1;;;909:62:22;;18024:2:24;909:62:22::1;::::0;::::1;18006:21:24::0;18063:2;18043:18;;;18036:30;18102:34;18082:18;;;18075:62;-1:-1:-1;;;18153:18:24;;;18146:36;18199:19;;909:62:22::1;17822:402:24::0;909:62:22::1;1034:12;::::0;:25:::1;::::0;1051:7;1034:16:::1;:25::i;:::-;1019:12;:40:::0;1101:10:::1;1092:20;::::0;;;:8:::1;:20;::::0;;;;;:33:::1;::::0;1117:7;1092:24:::1;:33::i;:::-;1078:10;1069:20;::::0;;;:8:::1;:20;::::0;;;;:56;-1:-1:-1;;;776:356:22:o;20739:22:21:-;;;;;;;:::i;12648:269::-;12416:6;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;12743:22:21;::::1;12722:107;;;::::0;-1:-1:-1;;;12722:107:21;;18431:2:24;12722:107:21::1;::::0;::::1;18413:21:24::0;18470:2;18450:18;;;18443:30;18509:34;18489:18;;;18482:62;-1:-1:-1;;;18560:18:24;;;18553:36;18606:19;;12722:107:21::1;18229:402:24::0;12722:107:21::1;12865:6;::::0;12844:38:::1;::::0;;-1:-1:-1;;;;;12865:6:21;;::::1;18848:34:24::0;;18918:15;;;18913:2;18898:18;;18891:43;12844:38:21::1;::::0;18783:18:24;12844:38:21::1;;;;;;;12892:18;12901:8;12892;:18::i;:::-;12648:269:::0;:::o;18557:143::-;17828:11;;-1:-1:-1;;;;;17828:11:21;17814:10;:25;17793:116;;;;-1:-1:-1;;;17793:116:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;18629:21:21;::::1;;::::0;;;:11:::1;:21;::::0;;;;;:28;;-1:-1:-1;;18629:28:21::1;18653:4;18629:28;::::0;;18672:21;::::1;::::0;18629;18672::::1;18557:143:::0;:::o;26209:363::-;-1:-1:-1;;;;;26340:19:21;;26332:68;;;;-1:-1:-1;;;26332:68:21;;19147:2:24;26332:68:21;;;19129:21:24;19186:2;19166:18;;;19159:30;19225:34;19205:18;;;19198:62;-1:-1:-1;;;19276:18:24;;;19269:34;19320:19;;26332:68:21;18945:400:24;26332:68:21;-1:-1:-1;;;;;26418:21:21;;26410:68;;;;-1:-1:-1;;;26410:68:21;;19552:2:24;26410:68:21;;;19534:21:24;19591:2;19571:18;;;19564:30;19630:34;19610:18;;;19603:62;-1:-1:-1;;;19681:18:24;;;19674:32;19723:19;;26410:68:21;19350:398:24;26410:68:21;-1:-1:-1;;;;;26488:14:21;;;;;;;:7;:14;;;;;;;;:23;;;;;;;;;;;;;:31;;;26534;;1342:25:24;;;26534:31:21;;1315:18:24;26534:31:21;1196:177:24;27942:526:21;-1:-1:-1;;;;;28068:18:21;;28060:68;;;;-1:-1:-1;;;28060:68:21;;19955:2:24;28060:68:21;;;19937:21:24;19994:2;19974:18;;;19967:30;20033:34;20013:18;;;20006:62;-1:-1:-1;;;20084:18:24;;;20077:35;20129:19;;28060:68:21;19753:401:24;28060:68:21;-1:-1:-1;;;;;28146:16:21;;28138:64;;;;-1:-1:-1;;;28138:64:21;;20361:2:24;28138:64:21;;;20343:21:24;20400:2;20380:18;;;20373:30;20439:34;20419:18;;;20412:62;-1:-1:-1;;;20490:18:24;;;20483:33;20533:19;;28138:64:21;20159:399:24;28138:64:21;-1:-1:-1;;;;;28242:14:21;;;;;;:8;:14;;;;;;28233:23;;;28212:108;;;;-1:-1:-1;;;28212:108:21;;20765:2:24;28212:108:21;;;20747:21:24;20804:2;20784:18;;;20777:30;20843:34;20823:18;;;20816:62;-1:-1:-1;;;20894:18:24;;;20887:36;20940:19;;28212:108:21;20563:402:24;28212:108:21;-1:-1:-1;;;;;28348:14:21;;;;;;:8;:14;;;;;;:25;;28367:5;28348:18;:25::i;:::-;-1:-1:-1;;;;;28331:14:21;;;;;;;:8;:14;;;;;;:42;;;;28398:12;;;;;;;:23;;28415:5;28398:16;:23::i;:::-;-1:-1:-1;;;;;28383:12:21;;;;;;;:8;:12;;;;;;;:38;;;;28436:25;;;;;;;;;;28455:5;1342:25:24;;1330:2;1315:18;;1196:177;1441:134:21;1499:7;1525:43;1529:1;1532;1525:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1518:50;1441:134;-1:-1:-1;;;1441:134:21:o;12196:79::-;12251:6;:17;;-1:-1:-1;;;;;;12251:17:21;-1:-1:-1;;;;;12251:17:21;;;;;;;;;;12196:79::o;994:176::-;1052:7;;1083:5;1087:1;1083;:5;:::i;:::-;1071:17;;1111:1;1106;:6;;1098:46;;;;-1:-1:-1;;;1098:46:21;;21434:2:24;1098:46:21;;;21416:21:24;21473:2;21453:18;;;21446:30;21512:29;21492:18;;;21485:57;21559:18;;1098:46:21;21232:351:24;382:227:22;512:22;;-1:-1:-1;;21737:2:24;21733:15;;;21729:53;512:22:22;;;21717:66:24;471:4:22;;;;21799:12:24;;512:22:22;;;;;;;;;;;;502:33;;;;;;487:48;;552:50;571:12;585:10;;597:4;552:18;:50::i;:::-;545:57;382:227;-1:-1:-1;;;;382:227:22:o;1866:217:21:-;1982:7;2017:12;2009:6;;;;2001:29;;;;-1:-1:-1;;;2001:29:21;;;;;;;;:::i;:::-;-1:-1:-1;2040:9:21;2052:5;2056:1;2052;:5;:::i;:::-;2040:17;1866:217;-1:-1:-1;;;;;1866:217:21:o;1265:154:20:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;;1265:154;-1:-1:-1;;;;1265:154:20:o;1967:290::-;2050:7;2092:4;2050:7;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;2178:9;:33::i;:::-;2163:48;-1:-1:-1;2144:3:20;;;;:::i;:::-;;;;2106:116;;;-1:-1:-1;2238:12:20;1967:290;-1:-1:-1;;;1967:290:20:o;9229:147::-;9292:7;9322:1;9318;:5;:51;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9318:51;;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9326:20;9496:261;14:548:24;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:24;;674:42;;664:70;;730:1;727;720:12;745:254;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:24:o;1378:186::-;1437:6;1490:2;1478:9;1469:7;1465:23;1461:32;1458:52;;;1506:1;1503;1496:12;1458:52;1529:29;1548:9;1529:29;:::i;1569:328::-;1646:6;1654;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1754:29;1773:9;1754:29;:::i;:::-;1744:39;;1802:38;1836:2;1825:9;1821:18;1802:38;:::i;:::-;1792:48;;1887:2;1876:9;1872:18;1859:32;1849:42;;1569:328;;;;;:::o;2091:127::-;2152:10;2147:3;2143:20;2140:1;2133:31;2183:4;2180:1;2173:15;2207:4;2204:1;2197:15;2223:275;2294:2;2288:9;2359:2;2340:13;;-1:-1:-1;;2336:27:24;2324:40;;2394:18;2379:34;;2415:22;;;2376:62;2373:88;;;2441:18;;:::i;:::-;2477:2;2470:22;2223:275;;-1:-1:-1;2223:275:24:o;2503:531::-;2546:5;2599:3;2592:4;2584:6;2580:17;2576:27;2566:55;;2617:1;2614;2607:12;2566:55;2653:6;2640:20;2679:18;2675:2;2672:26;2669:52;;;2701:18;;:::i;:::-;2745:55;2788:2;2769:13;;-1:-1:-1;;2765:27:24;2794:4;2761:38;2745:55;:::i;:::-;2825:2;2816:7;2809:19;2871:3;2864:4;2859:2;2851:6;2847:15;2843:26;2840:35;2837:55;;;2888:1;2885;2878:12;2837:55;2953:2;2946:4;2938:6;2934:17;2927:4;2918:7;2914:18;2901:55;3001:1;2976:16;;;2994:4;2972:27;2965:38;;;;2980:7;2503:531;-1:-1:-1;;;2503:531:24:o;3039:156::-;3105:20;;3165:4;3154:16;;3144:27;;3134:55;;3185:1;3182;3175:12;3200:1114;3350:6;3358;3366;3374;3382;3390;3398;3406;3459:3;3447:9;3438:7;3434:23;3430:33;3427:53;;;3476:1;3473;3466:12;3427:53;3516:9;3503:23;3545:18;3586:2;3578:6;3575:14;3572:34;;;3602:1;3599;3592:12;3572:34;3625:50;3667:7;3658:6;3647:9;3643:22;3625:50;:::i;:::-;3615:60;;3728:2;3717:9;3713:18;3700:32;3684:48;;3757:2;3747:8;3744:16;3741:36;;;3773:1;3770;3763:12;3741:36;3796:52;3840:7;3829:8;3818:9;3814:24;3796:52;:::i;:::-;3786:62;;3901:2;3890:9;3886:18;3873:32;3857:48;;3930:2;3920:8;3917:16;3914:36;;;3946:1;3943;3936:12;3914:36;;3969:52;4013:7;4002:8;3991:9;3987:24;3969:52;:::i;:::-;3959:62;;;4040:36;4072:2;4061:9;4057:18;4040:36;:::i;:::-;4030:46;;4095:39;4129:3;4118:9;4114:19;4095:39;:::i;:::-;4085:49;;4153:39;4187:3;4176:9;4172:19;4153:39;:::i;:::-;4143:49;;4211:39;4245:3;4234:9;4230:19;4211:39;:::i;:::-;4201:49;;4269:39;4303:3;4292:9;4288:19;4269:39;:::i;:::-;4259:49;;3200:1114;;;;;;;;;;;:::o;4527:180::-;4586:6;4639:2;4627:9;4618:7;4614:23;4610:32;4607:52;;;4655:1;4652;4645:12;4607:52;-1:-1:-1;4678:23:24;;4527:180;-1:-1:-1;4527:180:24:o;4897:712::-;4951:5;5004:3;4997:4;4989:6;4985:17;4981:27;4971:55;;5022:1;5019;5012:12;4971:55;5058:6;5045:20;5084:4;5107:18;5103:2;5100:26;5097:52;;;5129:18;;:::i;:::-;5175:2;5172:1;5168:10;5198:28;5222:2;5218;5214:11;5198:28;:::i;:::-;5260:15;;;5330;;;5326:24;;;5291:12;;;;5362:15;;;5359:35;;;5390:1;5387;5380:12;5359:35;5426:2;5418:6;5414:15;5403:26;;5438:142;5454:6;5449:3;5446:15;5438:142;;;5520:17;;5508:30;;5471:12;;;;5558;;;;5438:142;;;5598:5;4897:712;-1:-1:-1;;;;;;;4897:712:24:o;5614:490::-;5716:6;5724;5732;5785:2;5773:9;5764:7;5760:23;5756:32;5753:52;;;5801:1;5798;5791:12;5753:52;5824:29;5843:9;5824:29;:::i;:::-;5814:39;;5900:2;5889:9;5885:18;5872:32;5862:42;;5955:2;5944:9;5940:18;5927:32;5982:18;5974:6;5971:30;5968:50;;;6014:1;6011;6004:12;5968:50;6037:61;6090:7;6081:6;6070:9;6066:22;6037:61;:::i;:::-;6027:71;;;5614:490;;;;;:::o;6109:416::-;6202:6;6210;6263:2;6251:9;6242:7;6238:23;6234:32;6231:52;;;6279:1;6276;6269:12;6231:52;6315:9;6302:23;6292:33;;6376:2;6365:9;6361:18;6348:32;6403:18;6395:6;6392:30;6389:50;;;6435:1;6432;6425:12;6389:50;6458:61;6511:7;6502:6;6491:9;6487:22;6458:61;:::i;:::-;6448:71;;;6109:416;;;;;:::o;6530:260::-;6598:6;6606;6659:2;6647:9;6638:7;6634:23;6630:32;6627:52;;;6675:1;6672;6665:12;6627:52;6698:29;6717:9;6698:29;:::i;:::-;6688:39;;6746:38;6780:2;6769:9;6765:18;6746:38;:::i;:::-;6736:48;;6530:260;;;;;:::o;6795:380::-;6874:1;6870:12;;;;6917;;;6938:61;;6992:4;6984:6;6980:17;6970:27;;6938:61;7045:2;7037:6;7034:14;7014:18;7011:38;7008:161;;7091:10;7086:3;7082:20;7079:1;7072:31;7126:4;7123:1;7116:15;7154:4;7151:1;7144:15;7008:161;;6795:380;;;:::o;7180:340::-;7382:2;7364:21;;;7421:2;7401:18;;;7394:30;-1:-1:-1;;;7455:2:24;7440:18;;7433:46;7511:2;7496:18;;7180:340::o;7525:401::-;7727:2;7709:21;;;7766:2;7746:18;;;7739:30;7805:34;7800:2;7785:18;;7778:62;-1:-1:-1;;;7871:2:24;7856:18;;7849:35;7916:3;7901:19;;7525:401::o;7931:408::-;8133:2;8115:21;;;8172:2;8152:18;;;8145:30;8211:34;8206:2;8191:18;;8184:62;-1:-1:-1;;;8277:2:24;8262:18;;8255:42;8329:3;8314:19;;7931:408::o;8753:405::-;8955:2;8937:21;;;8994:2;8974:18;;;8967:30;9033:34;9028:2;9013:18;;9006:62;-1:-1:-1;;;9099:2:24;9084:18;;9077:39;9148:3;9133:19;;8753:405::o;9574:411::-;9776:2;9758:21;;;9815:2;9795:18;;;9788:30;9854:34;9849:2;9834:18;;9827:62;-1:-1:-1;;;9920:2:24;9905:18;;9898:45;9975:3;9960:19;;9574:411::o;11350:545::-;11452:2;11447:3;11444:11;11441:448;;;11488:1;11513:5;11509:2;11502:17;11558:4;11554:2;11544:19;11628:2;11616:10;11612:19;11609:1;11605:27;11599:4;11595:38;11664:4;11652:10;11649:20;11646:47;;;-1:-1:-1;11687:4:24;11646:47;11742:2;11737:3;11733:12;11730:1;11726:20;11720:4;11716:31;11706:41;;11797:82;11815:2;11808:5;11805:13;11797:82;;;11860:17;;;11841:1;11830:13;11797:82;;;11801:3;;;11441:448;11350:545;;;:::o;12071:1352::-;12197:3;12191:10;12224:18;12216:6;12213:30;12210:56;;;12246:18;;:::i;:::-;12275:97;12365:6;12325:38;12357:4;12351:11;12325:38;:::i;:::-;12319:4;12275:97;:::i;:::-;12427:4;;12491:2;12480:14;;12508:1;12503:663;;;;13210:1;13227:6;13224:89;;;-1:-1:-1;13279:19:24;;;13273:26;13224:89;-1:-1:-1;;12028:1:24;12024:11;;;12020:24;12016:29;12006:40;12052:1;12048:11;;;12003:57;13326:81;;12473:944;;12503:663;11297:1;11290:14;;;11334:4;11321:18;;-1:-1:-1;;12539:20:24;;;12657:236;12671:7;12668:1;12665:14;12657:236;;;12760:19;;;12754:26;12739:42;;12852:27;;;;12820:1;12808:14;;;;12687:19;;12657:236;;;12661:3;12921:6;12912:7;12909:19;12906:201;;;12982:19;;;12976:26;-1:-1:-1;;13065:1:24;13061:14;;;13077:3;13057:24;13053:37;13049:42;13034:58;13019:74;;12906:201;-1:-1:-1;;;;;13153:1:24;13137:14;;;13133:22;13120:36;;-1:-1:-1;12071:1352:24:o;13428:398::-;13630:2;13612:21;;;13669:2;13649:18;;;13642:30;13708:34;13703:2;13688:18;;13681:62;-1:-1:-1;;;13774:2:24;13759:18;;13752:32;13816:3;13801:19;;13428:398::o;13831:397::-;14033:2;14015:21;;;14072:2;14052:18;;;14045:30;14111:34;14106:2;14091:18;;14084:62;-1:-1:-1;;;14177:2:24;14162:18;;14155:31;14218:3;14203:19;;13831:397::o;16279:356::-;16481:2;16463:21;;;16500:18;;;16493:30;16559:34;16554:2;16539:18;;16532:62;16626:2;16611:18;;16279:356::o;20970:127::-;21031:10;21026:3;21022:20;21019:1;21012:31;21062:4;21059:1;21052:15;21086:4;21083:1;21076:15;21102:125;21167:9;;;21188:10;;;21185:36;;;21201:18;;:::i;21822:128::-;21889:9;;;21910:11;;;21907:37;;;21924:18;;:::i;21955:127::-;22016:10;22011:3;22007:20;22004:1;21997:31;22047:4;22044:1;22037:15;22071:4;22068:1;22061:15;22087:135;22126:3;22147:17;;;22144:43;;22167:18;;:::i;:::-;-1:-1:-1;22214:1:24;22203:13;;22087:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "blacklist(address)": "f9f92be4",
    "blacklister()": "bd102430",
    "burn(uint256)": "42966c68",
    "configureMinter(address,uint256)": "4e44d956",
    "currency()": "e5a6b10f",
    "decimals()": "313ce567",
    "initialize(string,string,string,uint8,address,address,address,address)": "3357162b",
    "isBlacklisted(address)": "fe575a87",
    "isMinter(address)": "aa271e1a",
    "masterMinter()": "35d99f35",
    "mint(address,uint256)": "40c10f19",
    "mintV2(uint256,bytes32[])": "cb171800",
    "minterAllowance(address)": "8a6db9c3",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "pauser()": "9fd0506d",
    "removeMinter(address)": "3092afd5",
    "setMerkleRoot(bytes32)": "7cb64759",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "transferV2(address,uint256,bytes32[])": "c76e5b2b",
    "unBlacklist(address)": "1a895266",
    "unpause()": "3f4ba83a",
    "updateBlacklister(address)": "ad38bf22",
    "updateMasterMinter(address)": "aa20e1e4",
    "updatePauser(address)": "554bab3c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"}],\"name\":\"BlacklisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"}],\"name\":\"MasterMinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"MinterConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMinter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PauserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"UnBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blacklister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"configureMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenCurrency\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mintV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"minterAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"transferV2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBlacklister\",\"type\":\"address\"}],\"name\":\"updateBlacklister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMasterMinter\",\"type\":\"address\"}],\"name\":\"updateMasterMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPauser\",\"type\":\"address\"}],\"name\":\"updatePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"Event to show ownership has been transferred\",\"params\":{\"newOwner\":\"representing the address of the new owner\",\"previousOwner\":\"representing the address of the previous owner\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"Token owner's address\",\"spender\":\"Spender's address\"},\"returns\":{\"_0\":\"Allowance amount\"}},\"approve(address,uint256)\":{\"params\":{\"spender\":\"Spender's address\",\"value\":\"Allowance amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"balanceOf(address)\":{\"details\":\"Get token balance of an account\",\"params\":{\"account\":\"address The account\"}},\"blacklist(address)\":{\"details\":\"Adds account to blacklist\",\"params\":{\"_account\":\"The address to blacklist\"}},\"burn(uint256)\":{\"details\":\"allows a minter to burn some of its own tokens Validates that caller is a minter and that sender is not blacklisted amount is less than or equal to the minter's account balance\",\"params\":{\"_amount\":\"uint256 the amount of tokens to be burned\"}},\"configureMinter(address,uint256)\":{\"details\":\"Function to add/update a new minter\",\"params\":{\"minter\":\"The address of the minter\",\"minterAllowedAmount\":\"The minting amount allowed for the minter\"},\"returns\":{\"_0\":\"True if the operation was successful.\"}},\"isBlacklisted(address)\":{\"details\":\"Checks if account is blacklisted\",\"params\":{\"_account\":\"The address to check\"}},\"isMinter(address)\":{\"details\":\"Checks if account is a minter\",\"params\":{\"account\":\"The address to check\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.\",\"_to\":\"The address that will receive the minted tokens.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"minterAllowance(address)\":{\"details\":\"Get minter allowance for an account\",\"params\":{\"minter\":\"The address of the minter\"}},\"owner()\":{\"details\":\"Tells the address of the owner\",\"returns\":{\"_0\":\"the address of the owner\"}},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"removeMinter(address)\":{\"details\":\"Function to remove a minter\",\"params\":{\"minter\":\"The address of the minter to remove\"},\"returns\":{\"_0\":\"True if the operation was successful.\"}},\"totalSupply()\":{\"details\":\"Get totalSupply of token\"},\"transfer(address,uint256)\":{\"params\":{\"to\":\"Payee's address\",\"value\":\"Transfer amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"from\":\"Payer's address\",\"to\":\"Payee's address\",\"value\":\"Transfer amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unBlacklist(address)\":{\"details\":\"Removes account from blacklist\",\"params\":{\"_account\":\"The address to remove from the blacklist\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"},\"updatePauser(address)\":{\"details\":\"update the pauser role\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Amount of remaining tokens spender is allowed to transfer on behalf of the token owner\"},\"approve(address,uint256)\":{\"notice\":\"Set spender's allowance over the caller's tokens to be a given value.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens from the caller\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer tokens by spending allowance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/UsdcV2.sol\":\"UsdcV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":oz/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x93794b4a8dade2025ed0299cc5b5f0d817651e96f7d1ae10792d9f129f05c01b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cd9ac1b228ba68e9e8f9c8ffe60c97692255fbc5bcf6f3e3d47f236d996de6a\",\"dweb:/ipfs/QmS6auQ875SGESX7YDt2mBy3g6YjdDagnfLHMNTbxcyRce\"]},\"src/UsdcV1.sol\":{\"keccak256\":\"0xb243f40a4a7ac8826c203e3e5f2427e7f15eba73eeb8da6fec1c1d5a222d36c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8174812e121700ddd1961c330ffda00181856cdccdeea1cbd246c696ccc419d0\",\"dweb:/ipfs/QmWn88ExvexquR9m5RG5uiytvxNSP781CvhuPsb28ZypXR\"]},\"src/UsdcV2.sol\":{\"keccak256\":\"0x13c6a59b87ea298f3910ca5b7835a900080751f59ab65cc97f2c8a1a7ae24862\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://66e4caf33e506bf0289d75de7963cab4df034fd65d6be9928d8db24db2d23972\",\"dweb:/ipfs/QmTT5HqZhzEXzA8dtSod3fMNGnDKfJP7YRZLKSytrmuMGd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Blacklisted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newBlacklister",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BlacklisterChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "burner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newMasterMinter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MasterMinterChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "minterAllowedAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinterConfigured",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldMinter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "Pause",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PauserChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UnBlacklisted",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "Unpause",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "blacklist"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blacklister",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minterAllowedAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configureMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currency",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenCurrency",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "tokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "newMasterMinter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newPauser",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newBlacklister",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBlacklisted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "masterMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "_merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintV2"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minterAllowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_merkleRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMerkleRoot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "_merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferV2",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unBlacklist"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newBlacklister",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBlacklister"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newMasterMinter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMasterMinter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newPauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePauser"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "params": {
              "owner": "Token owner's address",
              "spender": "Spender's address"
            },
            "returns": {
              "_0": "Allowance amount"
            }
          },
          "approve(address,uint256)": {
            "params": {
              "spender": "Spender's address",
              "value": "Allowance amount"
            },
            "returns": {
              "_0": "True if successful"
            }
          },
          "balanceOf(address)": {
            "details": "Get token balance of an account",
            "params": {
              "account": "address The account"
            }
          },
          "blacklist(address)": {
            "details": "Adds account to blacklist",
            "params": {
              "_account": "The address to blacklist"
            }
          },
          "burn(uint256)": {
            "details": "allows a minter to burn some of its own tokens Validates that caller is a minter and that sender is not blacklisted amount is less than or equal to the minter's account balance",
            "params": {
              "_amount": "uint256 the amount of tokens to be burned"
            }
          },
          "configureMinter(address,uint256)": {
            "details": "Function to add/update a new minter",
            "params": {
              "minter": "The address of the minter",
              "minterAllowedAmount": "The minting amount allowed for the minter"
            },
            "returns": {
              "_0": "True if the operation was successful."
            }
          },
          "isBlacklisted(address)": {
            "details": "Checks if account is blacklisted",
            "params": {
              "_account": "The address to check"
            }
          },
          "isMinter(address)": {
            "details": "Checks if account is a minter",
            "params": {
              "account": "The address to check"
            }
          },
          "mint(address,uint256)": {
            "details": "Function to mint tokens",
            "params": {
              "_amount": "The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.",
              "_to": "The address that will receive the minted tokens."
            },
            "returns": {
              "_0": "A boolean that indicates if the operation was successful."
            }
          },
          "minterAllowance(address)": {
            "details": "Get minter allowance for an account",
            "params": {
              "minter": "The address of the minter"
            }
          },
          "owner()": {
            "details": "Tells the address of the owner",
            "returns": {
              "_0": "the address of the owner"
            }
          },
          "pause()": {
            "details": "called by the owner to pause, triggers stopped state"
          },
          "removeMinter(address)": {
            "details": "Function to remove a minter",
            "params": {
              "minter": "The address of the minter to remove"
            },
            "returns": {
              "_0": "True if the operation was successful."
            }
          },
          "totalSupply()": {
            "details": "Get totalSupply of token"
          },
          "transfer(address,uint256)": {
            "params": {
              "to": "Payee's address",
              "value": "Transfer amount"
            },
            "returns": {
              "_0": "True if successful"
            }
          },
          "transferFrom(address,address,uint256)": {
            "params": {
              "from": "Payer's address",
              "to": "Payee's address",
              "value": "Transfer amount"
            },
            "returns": {
              "_0": "True if successful"
            }
          },
          "transferOwnership(address)": {
            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
            "params": {
              "newOwner": "The address to transfer ownership to."
            }
          },
          "unBlacklist(address)": {
            "details": "Removes account from blacklist",
            "params": {
              "_account": "The address to remove from the blacklist"
            }
          },
          "unpause()": {
            "details": "called by the owner to unpause, returns to normal state"
          },
          "updatePauser(address)": {
            "details": "update the pauser role"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowance(address,address)": {
            "notice": "Amount of remaining tokens spender is allowed to transfer on behalf of the token owner"
          },
          "approve(address,uint256)": {
            "notice": "Set spender's allowance over the caller's tokens to be a given value."
          },
          "transfer(address,uint256)": {
            "notice": "Transfer tokens from the caller"
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Transfer tokens by spending allowance"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "murky/=lib/murky/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "oz/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/UsdcV2.sol": "UsdcV2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x93794b4a8dade2025ed0299cc5b5f0d817651e96f7d1ae10792d9f129f05c01b",
        "urls": [
          "bzz-raw://2cd9ac1b228ba68e9e8f9c8ffe60c97692255fbc5bcf6f3e3d47f236d996de6a",
          "dweb:/ipfs/QmS6auQ875SGESX7YDt2mBy3g6YjdDagnfLHMNTbxcyRce"
        ],
        "license": "MIT"
      },
      "src/UsdcV1.sol": {
        "keccak256": "0xb243f40a4a7ac8826c203e3e5f2427e7f15eba73eeb8da6fec1c1d5a222d36c6",
        "urls": [
          "bzz-raw://8174812e121700ddd1961c330ffda00181856cdccdeea1cbd246c696ccc419d0",
          "dweb:/ipfs/QmWn88ExvexquR9m5RG5uiytvxNSP781CvhuPsb28ZypXR"
        ],
        "license": "MIT"
      },
      "src/UsdcV2.sol": {
        "keccak256": "0x13c6a59b87ea298f3910ca5b7835a900080751f59ab65cc97f2c8a1a7ae24862",
        "urls": [
          "bzz-raw://66e4caf33e506bf0289d75de7963cab4df034fd65d6be9928d8db24db2d23972",
          "dweb:/ipfs/QmTT5HqZhzEXzA8dtSod3fMNGnDKfJP7YRZLKSytrmuMGd"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/UsdcV2.sol",
    "id": 47385,
    "exportedSymbols": {
      "FiatTokenV1": [
        45789
      ],
      "MerkleProof": [
        44422
      ],
      "SafeMath": [
        44618
      ],
      "UsdcV2": [
        47384
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1334:22",
    "nodes": [
      {
        "id": 47253,
        "nodeType": "PragmaDirective",
        "src": "39:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 47256,
        "nodeType": "ImportDirective",
        "src": "64:53:22",
        "nodes": [],
        "absolutePath": "src/UsdcV1.sol",
        "file": "./UsdcV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47385,
        "sourceUnit": 47252,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47254,
              "name": "FiatTokenV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45789,
              "src": "73:11:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47255,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44618,
              "src": "86:8:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47257,
        "nodeType": "ImportDirective",
        "src": "118:47:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "oz/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47385,
        "sourceUnit": 44423,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47384,
        "nodeType": "ContractDefinition",
        "src": "168:1203:22",
        "nodes": [
          {
            "id": 47262,
            "nodeType": "UsingForDirective",
            "src": "204:27:22",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 47260,
              "name": "SafeMath",
              "nameLocations": [
                "210:8:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44618,
              "src": "210:8:22"
            },
            "typeName": {
              "id": 47261,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "223:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 47264,
            "nodeType": "VariableDeclaration",
            "src": "236:26:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "252:10:22",
            "scope": 47384,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47263,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47276,
            "nodeType": "FunctionDefinition",
            "src": "272:104:22",
            "nodes": [],
            "body": {
              "id": 47275,
              "nodeType": "Block",
              "src": "335:41:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47271,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47264,
                      "src": "345:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47272,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47266,
                      "src": "358:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "345:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 47274,
                  "nodeType": "ExpressionStatement",
                  "src": "345:24:22"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47269,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47268,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "325:9:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44771,
                  "src": "325:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "325:9:22"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "281:13:22",
            "parameters": {
              "id": 47267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47266,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "303:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47276,
                  "src": "295:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47265,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:21:22"
            },
            "returnParameters": {
              "id": 47270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:22"
            },
            "scope": 47384,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47303,
            "nodeType": "FunctionDefinition",
            "src": "382:227:22",
            "nodes": [],
            "body": {
              "id": 47302,
              "nodeType": "Block",
              "src": "477:132:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47287,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "495:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 47302,
                      "src": "487:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 47286,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "487:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47294,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47291,
                            "name": "_who",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47281,
                            "src": "529:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 47289,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "512:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 47290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "516:12:22",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "512:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 47292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "512:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 47288,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "502:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 47293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "502:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "487:48:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47297,
                        "name": "_merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47279,
                        "src": "571:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 47298,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47264,
                        "src": "585:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 47299,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47287,
                        "src": "597:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 47295,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44422,
                        "src": "552:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$44422_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 47296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "564:6:22",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43912,
                      "src": "552:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 47300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:50:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 47285,
                  "id": 47301,
                  "nodeType": "Return",
                  "src": "545:57:22"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inWhitelist",
            "nameLocation": "391:11:22",
            "parameters": {
              "id": 47282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47279,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "420:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47303,
                  "src": "403:29:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47277,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "403:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47278,
                    "nodeType": "ArrayTypeName",
                    "src": "403:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47281,
                  "mutability": "mutable",
                  "name": "_who",
                  "nameLocation": "442:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47303,
                  "src": "434:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "402:45:22"
            },
            "returnParameters": {
              "id": 47285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47284,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47303,
                  "src": "471:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47283,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "470:6:22"
            },
            "scope": 47384,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47319,
            "nodeType": "ModifierDefinition",
            "src": "614:156:22",
            "nodes": [],
            "body": {
              "id": 47318,
              "nodeType": "Block",
              "src": "668:102:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47310,
                            "name": "_merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47306,
                            "src": "698:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 47311,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "712:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "716:6:22",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "712:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47309,
                          "name": "inWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47303,
                          "src": "686:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,address) view returns (bool)"
                          }
                        },
                        "id": 47313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "686:37:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973743a20496e76616c69642070726f6f662e",
                        "id": 47314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "724:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90d71eb995701acb987c158c79923740c41e7f299898711eb18a9c57db67b4f8",
                          "typeString": "literal_string \"Whitelist: Invalid proof.\""
                        },
                        "value": "Whitelist: Invalid proof."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90d71eb995701acb987c158c79923740c41e7f299898711eb18a9c57db67b4f8",
                          "typeString": "literal_string \"Whitelist: Invalid proof.\""
                        }
                      ],
                      "id": 47308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "678:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:74:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47316,
                  "nodeType": "ExpressionStatement",
                  "src": "678:74:22"
                },
                {
                  "id": 47317,
                  "nodeType": "PlaceholderStatement",
                  "src": "762:1:22"
                }
              ]
            },
            "name": "onlyWhitelist",
            "nameLocation": "623:13:22",
            "parameters": {
              "id": 47307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47306,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "654:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47319,
                  "src": "637:29:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47304,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "637:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47305,
                    "nodeType": "ArrayTypeName",
                    "src": "637:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "636:31:22"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47358,
            "nodeType": "FunctionDefinition",
            "src": "776:356:22",
            "nodes": [],
            "body": {
              "id": 47357,
              "nodeType": "Block",
              "src": "899:233:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 47333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 47331,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47321,
                          "src": "917:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 47332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "927:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "917:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7456323a206d696e7420616d6f756e74206e6f742067726561746572207468616e2030",
                        "id": 47334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "930:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1c4479e5db466115382e8903a2f3170aab407a244adca9f111faf746b65219c",
                          "typeString": "literal_string \"mintV2: mint amount not greater than 0\""
                        },
                        "value": "mintV2: mint amount not greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1c4479e5db466115382e8903a2f3170aab407a244adca9f111faf746b65219c",
                          "typeString": "literal_string \"mintV2: mint amount not greater than 0\""
                        }
                      ],
                      "id": 47330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "909:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "909:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47336,
                  "nodeType": "ExpressionStatement",
                  "src": "909:62:22"
                },
                {
                  "expression": {
                    "id": 47342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47337,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45063,
                      "src": "1019:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47340,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47321,
                          "src": "1051:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 47338,
                          "name": "totalSupply_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45063,
                          "src": "1034:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1047:3:22",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44451,
                        "src": "1034:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 47341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1034:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1019:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47343,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:40:22"
                },
                {
                  "expression": {
                    "id": 47355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47344,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45054,
                        "src": "1069:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 47347,
                      "indexExpression": {
                        "expression": {
                          "id": 47345,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1078:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1082:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1078:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1069:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47353,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47321,
                          "src": "1117:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 47348,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45054,
                            "src": "1092:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 47351,
                          "indexExpression": {
                            "expression": {
                              "id": 47349,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1101:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1105:6:22",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1101:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1092:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1113:3:22",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44451,
                        "src": "1092:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 47354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1092:33:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1069:56:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47356,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:56:22"
                }
              ]
            },
            "functionSelector": "cb171800",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 47327,
                    "name": "_merkleProof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47324,
                    "src": "881:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  }
                ],
                "id": 47328,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47326,
                  "name": "onlyWhitelist",
                  "nameLocations": [
                    "867:13:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47319,
                  "src": "867:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "867:27:22"
              }
            ],
            "name": "mintV2",
            "nameLocation": "785:6:22",
            "parameters": {
              "id": 47325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47321,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "800:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47358,
                  "src": "792:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47324,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "826:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47358,
                  "src": "809:29:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47322,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "809:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47323,
                    "nodeType": "ArrayTypeName",
                    "src": "809:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:48:22"
            },
            "returnParameters": {
              "id": 47329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:22"
            },
            "scope": 47384,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47383,
            "nodeType": "FunctionDefinition",
            "src": "1138:230:22",
            "nodes": [],
            "body": {
              "id": 47382,
              "nodeType": "Block",
              "src": "1298:70:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47374,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1318:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1322:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1318:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47376,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47360,
                        "src": "1330:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47377,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47362,
                        "src": "1334:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47373,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45630
                      ],
                      "referencedDeclaration": 45630,
                      "src": "1308:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 47378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1308:32:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47379,
                  "nodeType": "ExpressionStatement",
                  "src": "1308:32:22"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 47380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1357:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 47372,
                  "id": 47381,
                  "nodeType": "Return",
                  "src": "1350:11:22"
                }
              ]
            },
            "functionSelector": "c76e5b2b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 47368,
                    "name": "_merkleProof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47365,
                    "src": "1257:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  }
                ],
                "id": 47369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47367,
                  "name": "onlyWhitelist",
                  "nameLocations": [
                    "1243:13:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47319,
                  "src": "1243:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1243:27:22"
              }
            ],
            "name": "transferV2",
            "nameLocation": "1147:10:22",
            "parameters": {
              "id": 47366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47360,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1166:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47383,
                  "src": "1158:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47362,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1178:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47383,
                  "src": "1170:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47365,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "1202:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47383,
                  "src": "1185:29:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47363,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1185:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47364,
                    "nodeType": "ArrayTypeName",
                    "src": "1185:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1157:58:22"
            },
            "returnParameters": {
              "id": 47372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47383,
                  "src": "1288:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47370,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:6:22"
            },
            "scope": 47384,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47258,
              "name": "FiatTokenV1",
              "nameLocations": [
                "187:11:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45789,
              "src": "187:11:22"
            },
            "id": 47259,
            "nodeType": "InheritanceSpecifier",
            "src": "187:11:22"
          }
        ],
        "canonicalName": "UsdcV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47384,
          45789,
          45025,
          44897,
          44800,
          44717,
          44695
        ],
        "name": "UsdcV2",
        "nameLocation": "177:6:22",
        "scope": 47385,
        "usedErrors": [],
        "usedEvents": [
          44685,
          44694,
          44728,
          44806,
          44808,
          44812,
          44911,
          44915,
          44919,
          45079,
          45085,
          45091,
          45095,
          45099
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}