{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "Blacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newBlacklister",
          "type": "address"
        }
      ],
      "name": "BlacklisterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMasterMinter",
          "type": "address"
        }
      ],
      "name": "MasterMinterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minterAllowedAmount",
          "type": "uint256"
        }
      ],
      "name": "MinterConfigured",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMinter",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "PauserChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "UnBlacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "blacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blacklister",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minterAllowedAmount",
          "type": "uint256"
        }
      ],
      "name": "configureMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currency",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenCurrency",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "tokenDecimals",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "newMasterMinter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newPauser",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newBlacklister",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isBlacklisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "masterMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "mintV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "minterAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "transferV2",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "unBlacklist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newBlacklister",
          "type": "address"
        }
      ],
      "name": "updateBlacklister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newMasterMinter",
          "type": "address"
        }
      ],
      "name": "updateMasterMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newPauser",
          "type": "address"
        }
      ],
      "name": "updatePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526001805460ff60a01b191690556000600b5534801561002257600080fd5b50600080546001600160a01b03191633179055612273806100446000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80638456cb591161011a578063ad38bf22116100ad578063dd62ed3e1161007c578063dd62ed3e1461049c578063e5a6b10f146104d5578063f2fde38b146104dd578063f9f92be4146104f0578063fe575a871461050357600080fd5b8063ad38bf2214610450578063bd10243014610463578063c76e5b2b14610476578063cb1718001461048957600080fd5b80639fd0506d116100e95780639fd0506d146103e8578063a9059cbb146103fb578063aa20e1e414610411578063aa271e1a1461042457600080fd5b80638456cb591461039e5780638a6db9c3146103a65780638da5cb5b146103cf57806395d89b41146103e057600080fd5b806335d99f351161019d5780634e44d9561161016c5780634e44d95614610328578063554bab3c1461033b5780635c975abb1461034e57806370a08231146103625780637cb647591461038b57600080fd5b806335d99f35146102cf5780633f4ba83a146102fa57806340c10f191461030257806342966c681461031557600080fd5b806323b872dd116101d957806323b872dd146102735780633092afd51461028a578063313ce5671461029d5780633357162b146102bc57600080fd5b806306fdde031461020b578063095ea7b31461022957806318160ddd1461024c5780631a8952661461025e575b600080fd5b61021361052f565b6040516102209190611a8a565b60405180910390f35b61023c610237366004611aef565b6105bd565b6040519015158152602001610220565b600b545b604051908152602001610220565b61027161026c366004611b19565b610674565b005b61023c610281366004611b34565b60009392505050565b61023c610298366004611b19565b6106e7565b6006546102aa9060ff1681565b60405160ff9091168152602001610220565b6102716102ca366004611c38565b610770565b6008546102e2906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b6102716109d9565b61023c610310366004611aef565b610a3b565b610271610323366004611d14565b610d31565b61023c610336366004611aef565b610f2e565b610271610349366004611b19565b610ff0565b60015461023c90600160a01b900460ff1681565b610250610370366004611b19565b6001600160a01b031660009081526009602052604090205490565b610271610399366004611d14565b6110cb565b6102716110fa565b6102506103b4366004611b19565b6001600160a01b03166000908152600d602052604090205490565b6000546001600160a01b03166102e2565b610213611162565b6001546102e2906001600160a01b031681565b61023c610409366004611aef565b600092915050565b61027161041f366004611b19565b61116f565b61023c610432366004611b19565b6001600160a01b03166000908152600c602052604090205460ff1690565b61027161045e366004611b19565b611209565b6002546102e2906001600160a01b031681565b61023c610484366004611dad565b6112ee565b610271610497366004611e04565b61134e565b6102506104aa366004611e4b565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205490565b61021361143f565b6102716104eb366004611b19565b61144c565b6102716104fe366004611b19565b61152e565b61023c610511366004611b19565b6001600160a01b031660009081526003602052604090205460ff1690565b6004805461053c90611e7e565b80601f016020809104026020016040519081016040528092919081815260200182805461056890611e7e565b80156105b55780601f1061058a576101008083540402835291602001916105b5565b820191906000526020600020905b81548152906001019060200180831161059857829003601f168201915b505050505081565b600154600090600160a01b900460ff16156105f35760405162461bcd60e51b81526004016105ea90611eb8565b60405180910390fd5b3360008181526003602052604090205460ff16156106235760405162461bcd60e51b81526004016105ea90611ee2565b6001600160a01b038416600090815260036020526040902054849060ff161561065e5760405162461bcd60e51b81526004016105ea90611ee2565b6106693386866115a4565b506001949350505050565b6002546001600160a01b0316331461069e5760405162461bcd60e51b81526004016105ea90611f27565b6001600160a01b038116600081815260036020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b6008546000906001600160a01b031633146107145760405162461bcd60e51b81526004016105ea90611f73565b6001600160a01b0382166000818152600c60209081526040808320805460ff19169055600d909152808220829055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a25060015b919050565b600854600160a01b900460ff16156107dd5760405162461bcd60e51b815260206004820152602a60248201527f46696174546f6b656e3a20636f6e747261637420697320616c726561647920696044820152691b9a5d1a585b1a5e995960b21b60648201526084016105ea565b6001600160a01b0384166108035760405162461bcd60e51b81526004016105ea90611fbc565b6001600160a01b03831661086b5760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206e65772070617573657220697320746865207a65726044820152686f206164647265737360b81b60648201526084016105ea565b6001600160a01b0382166108d85760405162461bcd60e51b815260206004820152602e60248201527f46696174546f6b656e3a206e657720626c61636b6c697374657220697320746860448201526d65207a65726f206164647265737360901b60648201526084016105ea565b6001600160a01b03811661093f5760405162461bcd60e51b815260206004820152602860248201527f46696174546f6b656e3a206e6577206f776e657220697320746865207a65726f604482015267206164647265737360c01b60648201526084016105ea565b600461094b898261205a565b506005610958888261205a565b506007610965878261205a565b506006805460ff191660ff8716179055600880546001600160a01b03199081166001600160a01b0387811691909117909255600180548216868416179055600280549091169184169190911790556109bc816116c0565b50506008805460ff60a01b1916600160a01b179055505050505050565b6001546001600160a01b03163314610a035760405162461bcd60e51b81526004016105ea9061211a565b6001805460ff60a01b191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600154600090600160a01b900460ff1615610a685760405162461bcd60e51b81526004016105ea90611eb8565b336000908152600c602052604090205460ff16610a975760405162461bcd60e51b81526004016105ea9061215c565b3360008181526003602052604090205460ff1615610ac75760405162461bcd60e51b81526004016105ea90611ee2565b6001600160a01b038416600090815260036020526040902054849060ff1615610b025760405162461bcd60e51b81526004016105ea90611ee2565b6001600160a01b038516610b645760405162461bcd60e51b815260206004820152602360248201527f46696174546f6b656e3a206d696e7420746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ea565b60008411610bc65760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206d696e7420616d6f756e74206e6f7420677265617460448201526806572207468616e20360bc1b60648201526084016105ea565b336000908152600d602052604090205480851115610c3d5760405162461bcd60e51b815260206004820152602e60248201527f46696174546f6b656e3a206d696e7420616d6f756e742065786365656473206d60448201526d696e746572416c6c6f77616e636560901b60648201526084016105ea565b600b54610c4a90866116e2565b600b556001600160a01b038616600090815260096020526040902054610c7090866116e2565b6001600160a01b038716600090815260096020526040902055610c938186611748565b336000818152600d602090815260409182902093909355518781526001600160a01b038916927fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8910160405180910390a36040518581526001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600195945050505050565b600154600160a01b900460ff1615610d5b5760405162461bcd60e51b81526004016105ea90611eb8565b336000908152600c602052604090205460ff16610d8a5760405162461bcd60e51b81526004016105ea9061215c565b3360008181526003602052604090205460ff1615610dba5760405162461bcd60e51b81526004016105ea90611ee2565b3360009081526009602052604090205482610e295760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206275726e20616d6f756e74206e6f7420677265617460448201526806572207468616e20360bc1b60648201526084016105ea565b82811015610e885760405162461bcd60e51b815260206004820152602660248201527f46696174546f6b656e3a206275726e20616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ea565b600b54610e959084611748565b600b55610ea28184611748565b33600081815260096020526040908190209290925590517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590610ee89086815260200190565b60405180910390a260405183815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a3505050565b600154600090600160a01b900460ff1615610f5b5760405162461bcd60e51b81526004016105ea90611eb8565b6008546001600160a01b03163314610f855760405162461bcd60e51b81526004016105ea90611f73565b6001600160a01b0383166000818152600c60209081526040808320805460ff19166001179055600d82529182902085905590518481527f46980fca912ef9bcdbd36877427b6b90e860769f604e89c0e67720cece530d20910160405180910390a25060015b92915050565b6000546001600160a01b0316331461101a5760405162461bcd60e51b81526004016105ea9061219d565b6001600160a01b0381166110815760405162461bcd60e51b815260206004820152602860248201527f5061757361626c653a206e65772070617573657220697320746865207a65726f604482015267206164647265737360c01b60648201526084016105ea565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fb80482a293ca2e013eda8683c9bd7fc8347cfdaeea5ede58cba46df502c2a60490600090a250565b6000546001600160a01b031633146110f55760405162461bcd60e51b81526004016105ea9061219d565b600e55565b6001546001600160a01b031633146111245760405162461bcd60e51b81526004016105ea9061211a565b6001805460ff60a01b1916600160a01b1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b6005805461053c90611e7e565b6000546001600160a01b031633146111995760405162461bcd60e51b81526004016105ea9061219d565b6001600160a01b0381166111bf5760405162461bcd60e51b81526004016105ea90611fbc565b600880546001600160a01b0319166001600160a01b0383169081179091556040517fdb66dfa9c6b8f5226fe9aac7e51897ae8ee94ac31dc70bb6c9900b2574b707e690600090a250565b6000546001600160a01b031633146112335760405162461bcd60e51b81526004016105ea9061219d565b6001600160a01b0381166112a45760405162461bcd60e51b815260206004820152603260248201527f426c61636b6c69737461626c653a206e657720626c61636b6c697374657220696044820152717320746865207a65726f206164647265737360701b60648201526084016105ea565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b6000816112fb813361178a565b6113435760405162461bcd60e51b81526020600482015260196024820152782bb434ba32b634b9ba1d1024b73b30b634b210383937b7b31760391b60448201526064016105ea565b6106693386866117db565b80611359813361178a565b6113a15760405162461bcd60e51b81526020600482015260196024820152782bb434ba32b634b9ba1d1024b73b30b634b210383937b7b31760391b60448201526064016105ea565b600083116114005760405162461bcd60e51b815260206004820152602660248201527f6d696e7456323a206d696e7420616d6f756e74206e6f7420677265617465722060448201526507468616e20360d41b60648201526084016105ea565b600b5461140d90846116e2565b600b553360009081526009602052604090205461142a90846116e2565b33600090815260096020526040902055505050565b6007805461053c90611e7e565b6000546001600160a01b031633146114765760405162461bcd60e51b81526004016105ea9061219d565b6001600160a01b0381166114db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ea565b600054604080516001600160a01b03928316815291831660208301527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0910160405180910390a161152b816116c0565b50565b6002546001600160a01b031633146115585760405162461bcd60e51b81526004016105ea90611f27565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b0383166116065760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ea565b6001600160a01b0382166116675760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ea565b6001600160a01b038381166000818152600a602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101610f21565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806116ef83856121e8565b9050838110156117415760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105ea565b9392505050565b600061174183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506119be565b6040516bffffffffffffffffffffffff19606083901b16602082015260009081906034016040516020818303038152906040528051906020012090506117d384600e54836119f8565b949350505050565b6001600160a01b03831661183f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ea565b6001600160a01b0382166118a15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ea565b6001600160a01b0383166000908152600960205260409020548111156119185760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ea565b6001600160a01b03831660009081526009602052604090205461193b9082611748565b6001600160a01b03808516600090815260096020526040808220939093559084168152205461196a90826116e2565b6001600160a01b0380841660008181526009602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f219085815260200190565b600081848411156119e25760405162461bcd60e51b81526004016105ea9190611a8a565b5060006119ef84866121fb565b95945050505050565b600082611a058584611a0e565b14949350505050565b600081815b8451811015611a5357611a3f82868381518110611a3257611a3261220e565b6020026020010151611a5b565b915080611a4b81612224565b915050611a13565b509392505050565b6000818310611a77576000828152602084905260409020611741565b6000838152602083905260409020611741565b600060208083528351808285015260005b81811015611ab757858101830151858201604001528201611a9b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076b57600080fd5b60008060408385031215611b0257600080fd5b611b0b83611ad8565b946020939093013593505050565b600060208284031215611b2b57600080fd5b61174182611ad8565b600080600060608486031215611b4957600080fd5b611b5284611ad8565b9250611b6060208501611ad8565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611baf57611baf611b70565b604052919050565b600082601f830112611bc857600080fd5b813567ffffffffffffffff811115611be257611be2611b70565b611bf5601f8201601f1916602001611b86565b818152846020838601011115611c0a57600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff8116811461076b57600080fd5b600080600080600080600080610100898b031215611c5557600080fd5b883567ffffffffffffffff80821115611c6d57600080fd5b611c798c838d01611bb7565b995060208b0135915080821115611c8f57600080fd5b611c9b8c838d01611bb7565b985060408b0135915080821115611cb157600080fd5b50611cbe8b828c01611bb7565b965050611ccd60608a01611c27565b9450611cdb60808a01611ad8565b9350611ce960a08a01611ad8565b9250611cf760c08a01611ad8565b9150611d0560e08a01611ad8565b90509295985092959890939650565b600060208284031215611d2657600080fd5b5035919050565b600082601f830112611d3e57600080fd5b8135602067ffffffffffffffff821115611d5a57611d5a611b70565b8160051b611d69828201611b86565b9283528481018201928281019087851115611d8357600080fd5b83870192505b84831015611da257823582529183019190830190611d89565b979650505050505050565b600080600060608486031215611dc257600080fd5b611dcb84611ad8565b925060208401359150604084013567ffffffffffffffff811115611dee57600080fd5b611dfa86828701611d2d565b9150509250925092565b60008060408385031215611e1757600080fd5b82359150602083013567ffffffffffffffff811115611e3557600080fd5b611e4185828601611d2d565b9150509250929050565b60008060408385031215611e5e57600080fd5b611e6783611ad8565b9150611e7560208401611ad8565b90509250929050565b600181811c90821680611e9257607f821691505b602082108103611eb257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526025908201527f426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c6040820152641a5cdd195960da1b606082015260800190565b6020808252602c908201527f426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686560408201526b10313630b1b5b634b9ba32b960a11b606082015260800190565b60208082526029908201527f46696174546f6b656e3a2063616c6c6572206973206e6f7420746865206d61736040820152683a32b926b4b73a32b960b91b606082015260800190565b6020808252602f908201527f46696174546f6b656e3a206e6577206d61737465724d696e746572206973207460408201526e6865207a65726f206164647265737360881b606082015260800190565b601f82111561205557600081815260208120601f850160051c810160208610156120325750805b601f850160051c820191505b818110156120515782815560010161203e565b5050505b505050565b815167ffffffffffffffff81111561207457612074611b70565b612088816120828454611e7e565b8461200b565b602080601f8311600181146120bd57600084156120a55750858301515b600019600386901b1c1916600185901b178555612051565b600085815260208120601f198616915b828110156120ec578886015182559484019460019091019084016120cd565b508582101561210a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526022908201527f5061757361626c653a2063616c6c6572206973206e6f7420746865207061757360408201526132b960f11b606082015260800190565b60208082526021908201527f46696174546f6b656e3a2063616c6c6572206973206e6f742061206d696e74656040820152603960f91b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610fea57610fea6121d2565b81810381811115610fea57610fea6121d2565b634e487b7160e01b600052603260045260246000fd5b600060018201612236576122366121d2565b506001019056fea26469706673582212201af5ce30c5c81a99c1b4c193b5289ec118dddcac664224681c2324dd2612f82764736f6c63430008150033",
    "sourceMap": "168:1435:22:-:0;;;14987:26:21;;;-1:-1:-1;;;;14987:26:21;;;15008:5;20953:33;;168:1435:22;;;;;;;;;-1:-1:-1;12251:6:21;:17;;-1:-1:-1;;;;;;12251:17:21;11935:10;12251:17;;;168:1435:22;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c80638456cb591161011a578063ad38bf22116100ad578063dd62ed3e1161007c578063dd62ed3e1461049c578063e5a6b10f146104d5578063f2fde38b146104dd578063f9f92be4146104f0578063fe575a871461050357600080fd5b8063ad38bf2214610450578063bd10243014610463578063c76e5b2b14610476578063cb1718001461048957600080fd5b80639fd0506d116100e95780639fd0506d146103e8578063a9059cbb146103fb578063aa20e1e414610411578063aa271e1a1461042457600080fd5b80638456cb591461039e5780638a6db9c3146103a65780638da5cb5b146103cf57806395d89b41146103e057600080fd5b806335d99f351161019d5780634e44d9561161016c5780634e44d95614610328578063554bab3c1461033b5780635c975abb1461034e57806370a08231146103625780637cb647591461038b57600080fd5b806335d99f35146102cf5780633f4ba83a146102fa57806340c10f191461030257806342966c681461031557600080fd5b806323b872dd116101d957806323b872dd146102735780633092afd51461028a578063313ce5671461029d5780633357162b146102bc57600080fd5b806306fdde031461020b578063095ea7b31461022957806318160ddd1461024c5780631a8952661461025e575b600080fd5b61021361052f565b6040516102209190611a8a565b60405180910390f35b61023c610237366004611aef565b6105bd565b6040519015158152602001610220565b600b545b604051908152602001610220565b61027161026c366004611b19565b610674565b005b61023c610281366004611b34565b60009392505050565b61023c610298366004611b19565b6106e7565b6006546102aa9060ff1681565b60405160ff9091168152602001610220565b6102716102ca366004611c38565b610770565b6008546102e2906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b6102716109d9565b61023c610310366004611aef565b610a3b565b610271610323366004611d14565b610d31565b61023c610336366004611aef565b610f2e565b610271610349366004611b19565b610ff0565b60015461023c90600160a01b900460ff1681565b610250610370366004611b19565b6001600160a01b031660009081526009602052604090205490565b610271610399366004611d14565b6110cb565b6102716110fa565b6102506103b4366004611b19565b6001600160a01b03166000908152600d602052604090205490565b6000546001600160a01b03166102e2565b610213611162565b6001546102e2906001600160a01b031681565b61023c610409366004611aef565b600092915050565b61027161041f366004611b19565b61116f565b61023c610432366004611b19565b6001600160a01b03166000908152600c602052604090205460ff1690565b61027161045e366004611b19565b611209565b6002546102e2906001600160a01b031681565b61023c610484366004611dad565b6112ee565b610271610497366004611e04565b61134e565b6102506104aa366004611e4b565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205490565b61021361143f565b6102716104eb366004611b19565b61144c565b6102716104fe366004611b19565b61152e565b61023c610511366004611b19565b6001600160a01b031660009081526003602052604090205460ff1690565b6004805461053c90611e7e565b80601f016020809104026020016040519081016040528092919081815260200182805461056890611e7e565b80156105b55780601f1061058a576101008083540402835291602001916105b5565b820191906000526020600020905b81548152906001019060200180831161059857829003601f168201915b505050505081565b600154600090600160a01b900460ff16156105f35760405162461bcd60e51b81526004016105ea90611eb8565b60405180910390fd5b3360008181526003602052604090205460ff16156106235760405162461bcd60e51b81526004016105ea90611ee2565b6001600160a01b038416600090815260036020526040902054849060ff161561065e5760405162461bcd60e51b81526004016105ea90611ee2565b6106693386866115a4565b506001949350505050565b6002546001600160a01b0316331461069e5760405162461bcd60e51b81526004016105ea90611f27565b6001600160a01b038116600081815260036020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b6008546000906001600160a01b031633146107145760405162461bcd60e51b81526004016105ea90611f73565b6001600160a01b0382166000818152600c60209081526040808320805460ff19169055600d909152808220829055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a25060015b919050565b600854600160a01b900460ff16156107dd5760405162461bcd60e51b815260206004820152602a60248201527f46696174546f6b656e3a20636f6e747261637420697320616c726561647920696044820152691b9a5d1a585b1a5e995960b21b60648201526084016105ea565b6001600160a01b0384166108035760405162461bcd60e51b81526004016105ea90611fbc565b6001600160a01b03831661086b5760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206e65772070617573657220697320746865207a65726044820152686f206164647265737360b81b60648201526084016105ea565b6001600160a01b0382166108d85760405162461bcd60e51b815260206004820152602e60248201527f46696174546f6b656e3a206e657720626c61636b6c697374657220697320746860448201526d65207a65726f206164647265737360901b60648201526084016105ea565b6001600160a01b03811661093f5760405162461bcd60e51b815260206004820152602860248201527f46696174546f6b656e3a206e6577206f776e657220697320746865207a65726f604482015267206164647265737360c01b60648201526084016105ea565b600461094b898261205a565b506005610958888261205a565b506007610965878261205a565b506006805460ff191660ff8716179055600880546001600160a01b03199081166001600160a01b0387811691909117909255600180548216868416179055600280549091169184169190911790556109bc816116c0565b50506008805460ff60a01b1916600160a01b179055505050505050565b6001546001600160a01b03163314610a035760405162461bcd60e51b81526004016105ea9061211a565b6001805460ff60a01b191690556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3390600090a1565b600154600090600160a01b900460ff1615610a685760405162461bcd60e51b81526004016105ea90611eb8565b336000908152600c602052604090205460ff16610a975760405162461bcd60e51b81526004016105ea9061215c565b3360008181526003602052604090205460ff1615610ac75760405162461bcd60e51b81526004016105ea90611ee2565b6001600160a01b038416600090815260036020526040902054849060ff1615610b025760405162461bcd60e51b81526004016105ea90611ee2565b6001600160a01b038516610b645760405162461bcd60e51b815260206004820152602360248201527f46696174546f6b656e3a206d696e7420746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ea565b60008411610bc65760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206d696e7420616d6f756e74206e6f7420677265617460448201526806572207468616e20360bc1b60648201526084016105ea565b336000908152600d602052604090205480851115610c3d5760405162461bcd60e51b815260206004820152602e60248201527f46696174546f6b656e3a206d696e7420616d6f756e742065786365656473206d60448201526d696e746572416c6c6f77616e636560901b60648201526084016105ea565b600b54610c4a90866116e2565b600b556001600160a01b038616600090815260096020526040902054610c7090866116e2565b6001600160a01b038716600090815260096020526040902055610c938186611748565b336000818152600d602090815260409182902093909355518781526001600160a01b038916927fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8910160405180910390a36040518581526001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600195945050505050565b600154600160a01b900460ff1615610d5b5760405162461bcd60e51b81526004016105ea90611eb8565b336000908152600c602052604090205460ff16610d8a5760405162461bcd60e51b81526004016105ea9061215c565b3360008181526003602052604090205460ff1615610dba5760405162461bcd60e51b81526004016105ea90611ee2565b3360009081526009602052604090205482610e295760405162461bcd60e51b815260206004820152602960248201527f46696174546f6b656e3a206275726e20616d6f756e74206e6f7420677265617460448201526806572207468616e20360bc1b60648201526084016105ea565b82811015610e885760405162461bcd60e51b815260206004820152602660248201527f46696174546f6b656e3a206275726e20616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ea565b600b54610e959084611748565b600b55610ea28184611748565b33600081815260096020526040908190209290925590517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590610ee89086815260200190565b60405180910390a260405183815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a3505050565b600154600090600160a01b900460ff1615610f5b5760405162461bcd60e51b81526004016105ea90611eb8565b6008546001600160a01b03163314610f855760405162461bcd60e51b81526004016105ea90611f73565b6001600160a01b0383166000818152600c60209081526040808320805460ff19166001179055600d82529182902085905590518481527f46980fca912ef9bcdbd36877427b6b90e860769f604e89c0e67720cece530d20910160405180910390a25060015b92915050565b6000546001600160a01b0316331461101a5760405162461bcd60e51b81526004016105ea9061219d565b6001600160a01b0381166110815760405162461bcd60e51b815260206004820152602860248201527f5061757361626c653a206e65772070617573657220697320746865207a65726f604482015267206164647265737360c01b60648201526084016105ea565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fb80482a293ca2e013eda8683c9bd7fc8347cfdaeea5ede58cba46df502c2a60490600090a250565b6000546001600160a01b031633146110f55760405162461bcd60e51b81526004016105ea9061219d565b600e55565b6001546001600160a01b031633146111245760405162461bcd60e51b81526004016105ea9061211a565b6001805460ff60a01b1916600160a01b1790556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62590600090a1565b6005805461053c90611e7e565b6000546001600160a01b031633146111995760405162461bcd60e51b81526004016105ea9061219d565b6001600160a01b0381166111bf5760405162461bcd60e51b81526004016105ea90611fbc565b600880546001600160a01b0319166001600160a01b0383169081179091556040517fdb66dfa9c6b8f5226fe9aac7e51897ae8ee94ac31dc70bb6c9900b2574b707e690600090a250565b6000546001600160a01b031633146112335760405162461bcd60e51b81526004016105ea9061219d565b6001600160a01b0381166112a45760405162461bcd60e51b815260206004820152603260248201527f426c61636b6c69737461626c653a206e657720626c61636b6c697374657220696044820152717320746865207a65726f206164647265737360701b60648201526084016105ea565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b6000816112fb813361178a565b6113435760405162461bcd60e51b81526020600482015260196024820152782bb434ba32b634b9ba1d1024b73b30b634b210383937b7b31760391b60448201526064016105ea565b6106693386866117db565b80611359813361178a565b6113a15760405162461bcd60e51b81526020600482015260196024820152782bb434ba32b634b9ba1d1024b73b30b634b210383937b7b31760391b60448201526064016105ea565b600083116114005760405162461bcd60e51b815260206004820152602660248201527f6d696e7456323a206d696e7420616d6f756e74206e6f7420677265617465722060448201526507468616e20360d41b60648201526084016105ea565b600b5461140d90846116e2565b600b553360009081526009602052604090205461142a90846116e2565b33600090815260096020526040902055505050565b6007805461053c90611e7e565b6000546001600160a01b031633146114765760405162461bcd60e51b81526004016105ea9061219d565b6001600160a01b0381166114db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ea565b600054604080516001600160a01b03928316815291831660208301527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0910160405180910390a161152b816116c0565b50565b6002546001600160a01b031633146115585760405162461bcd60e51b81526004016105ea90611f27565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b0383166116065760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ea565b6001600160a01b0382166116675760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ea565b6001600160a01b038381166000818152600a602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101610f21565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806116ef83856121e8565b9050838110156117415760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016105ea565b9392505050565b600061174183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506119be565b6040516bffffffffffffffffffffffff19606083901b16602082015260009081906034016040516020818303038152906040528051906020012090506117d384600e54836119f8565b949350505050565b6001600160a01b03831661183f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ea565b6001600160a01b0382166118a15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ea565b6001600160a01b0383166000908152600960205260409020548111156119185760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ea565b6001600160a01b03831660009081526009602052604090205461193b9082611748565b6001600160a01b03808516600090815260096020526040808220939093559084168152205461196a90826116e2565b6001600160a01b0380841660008181526009602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610f219085815260200190565b600081848411156119e25760405162461bcd60e51b81526004016105ea9190611a8a565b5060006119ef84866121fb565b95945050505050565b600082611a058584611a0e565b14949350505050565b600081815b8451811015611a5357611a3f82868381518110611a3257611a3261220e565b6020026020010151611a5b565b915080611a4b81612224565b915050611a13565b509392505050565b6000818310611a77576000828152602084905260409020611741565b6000838152602083905260409020611741565b600060208083528351808285015260005b81811015611ab757858101830151858201604001528201611a9b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076b57600080fd5b60008060408385031215611b0257600080fd5b611b0b83611ad8565b946020939093013593505050565b600060208284031215611b2b57600080fd5b61174182611ad8565b600080600060608486031215611b4957600080fd5b611b5284611ad8565b9250611b6060208501611ad8565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611baf57611baf611b70565b604052919050565b600082601f830112611bc857600080fd5b813567ffffffffffffffff811115611be257611be2611b70565b611bf5601f8201601f1916602001611b86565b818152846020838601011115611c0a57600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff8116811461076b57600080fd5b600080600080600080600080610100898b031215611c5557600080fd5b883567ffffffffffffffff80821115611c6d57600080fd5b611c798c838d01611bb7565b995060208b0135915080821115611c8f57600080fd5b611c9b8c838d01611bb7565b985060408b0135915080821115611cb157600080fd5b50611cbe8b828c01611bb7565b965050611ccd60608a01611c27565b9450611cdb60808a01611ad8565b9350611ce960a08a01611ad8565b9250611cf760c08a01611ad8565b9150611d0560e08a01611ad8565b90509295985092959890939650565b600060208284031215611d2657600080fd5b5035919050565b600082601f830112611d3e57600080fd5b8135602067ffffffffffffffff821115611d5a57611d5a611b70565b8160051b611d69828201611b86565b9283528481018201928281019087851115611d8357600080fd5b83870192505b84831015611da257823582529183019190830190611d89565b979650505050505050565b600080600060608486031215611dc257600080fd5b611dcb84611ad8565b925060208401359150604084013567ffffffffffffffff811115611dee57600080fd5b611dfa86828701611d2d565b9150509250925092565b60008060408385031215611e1757600080fd5b82359150602083013567ffffffffffffffff811115611e3557600080fd5b611e4185828601611d2d565b9150509250929050565b60008060408385031215611e5e57600080fd5b611e6783611ad8565b9150611e7560208401611ad8565b90509250929050565b600181811c90821680611e9257607f821691505b602082108103611eb257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526025908201527f426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c6040820152641a5cdd195960da1b606082015260800190565b6020808252602c908201527f426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686560408201526b10313630b1b5b634b9ba32b960a11b606082015260800190565b60208082526029908201527f46696174546f6b656e3a2063616c6c6572206973206e6f7420746865206d61736040820152683a32b926b4b73a32b960b91b606082015260800190565b6020808252602f908201527f46696174546f6b656e3a206e6577206d61737465724d696e746572206973207460408201526e6865207a65726f206164647265737360881b606082015260800190565b601f82111561205557600081815260208120601f850160051c810160208610156120325750805b601f850160051c820191505b818110156120515782815560010161203e565b5050505b505050565b815167ffffffffffffffff81111561207457612074611b70565b612088816120828454611e7e565b8461200b565b602080601f8311600181146120bd57600084156120a55750858301515b600019600386901b1c1916600185901b178555612051565b600085815260208120601f198616915b828110156120ec578886015182559484019460019091019084016120cd565b508582101561210a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526022908201527f5061757361626c653a2063616c6c6572206973206e6f7420746865207061757360408201526132b960f11b606082015260800190565b60208082526021908201527f46696174546f6b656e3a2063616c6c6572206973206e6f742061206d696e74656040820152603960f91b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610fea57610fea6121d2565b81810381811115610fea57610fea6121d2565b634e487b7160e01b600052603260045260246000fd5b600060018201612236576122366121d2565b506001019056fea26469706673582212201af5ce30c5c81a99c1b4c193b5289ec118dddcac664224681c2324dd2612f82764736f6c63430008150033",
    "sourceMap": "168:1435:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20662:18:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25738:273;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:24;;1162:22;1144:41;;1132:2;1117:18;25738:273:21;1004:187:24;25145:100:21;25226:12;;25145:100;;;1342:25:24;;;1330:2;1315:18;25145:100:21;1196:177:24;18829:148:21;;;;;;:::i;:::-;;:::i;:::-;;1504:96:22;;;;;;:::i;:::-;1592:4;1504:96;;;;;;29223:239:21;;;;;;:::i;:::-;;:::i;20712:21::-;;;;;;;;;;;;2074:4:24;2062:17;;;2044:36;;2032:2;2017:18;20712:21:21;1902:184:24;21426:1160:21;;;;;;:::i;:::-;;:::i;20767:27::-;;;;;-1:-1:-1;;;;;20767:27:21;;;;;;-1:-1:-1;;;;;4483:32:24;;;4465:51;;4453:2;4438:18;20767:27:21;4319:203:24;15683:94:21;;;:::i;23110:840::-;;;;;;:::i;:::-;;:::i;29751:538::-;;;;;;:::i;:::-;;:::i;28717:334::-;;;;;;:::i;:::-;;:::i;15834:254::-;;;;;;:::i;:::-;;:::i;14987:26::-;;;;;-1:-1:-1;;;14987:26:21;;;;;;25353:154;;;;;;:::i;:::-;-1:-1:-1;;;;;25483:17:21;25453:7;25483:17;;;:8;:17;;;;;;;25353:154;272:104:22;;;;;;:::i;:::-;;:::i;15504:89:21:-;;;:::i;24331:118::-;;;;;;:::i;:::-;-1:-1:-1;;;;;24421:21:21;24395:7;24421:21;;;:13;:21;;;;;;;24331:118;12058:79;12098:7;12124:6;-1:-1:-1;;;;;12124:6:21;12058:79;;20686:20;;;:::i;14960:21::-;;;;;-1:-1:-1;;;;;14960:21:21;;;1419:80:22;;;;;;:::i;:::-;1491:4;1419:80;;;;;30295:303:21;;;;;;:::i;:::-;;:::i;24556:104::-;;;;;;:::i;:::-;-1:-1:-1;;;;;24637:16:21;24614:4;24637:16;;;:7;:16;;;;;;;;;24556:104;18983:299;;;;;;:::i;:::-;;:::i;17422:26::-;;;;;-1:-1:-1;;;;;17422:26:21;;;1138:230:22;;;;;;:::i;:::-;;:::i;776:356::-;;;;;;:::i;:::-;;:::i;24911:175:21:-;;;;;;:::i;:::-;-1:-1:-1;;;;;25056:14:21;;;25026:7;25056:14;;;:7;:14;;;;;;;;:23;;;;;;;;;;;;;24911:175;20739:22;;;:::i;12648:269::-;;;;;;:::i;:::-;;:::i;18557:143::-;;;;;;:::i;:::-;;:::i;18334:115::-;;;;;;:::i;:::-;-1:-1:-1;;;;;18421:21:21;18398:4;18421:21;;;:11;:21;;;;;;;;;18334:115;20662:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;25738:273::-;15167:6;;25927:4;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;;;;;;;;;25866:10:::1;18121:21;::::0;;;:11:::1;:21;::::0;;;;;::::1;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18121:21:21;::::2;;::::0;;;:11:::2;:21;::::0;;;;;25901:7;;18121:21:::2;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::2;;;;;;;:::i;:::-;25947:36:::3;25956:10;25968:7;25977:5;25947:8;:36::i;:::-;-1:-1:-1::0;26000:4:21::3;::::0;25738:273;-1:-1:-1;;;;25738:273:21:o;18829:148::-;17828:11;;-1:-1:-1;;;;;17828:11:21;17814:10;:25;17793:116;;;;-1:-1:-1;;;17793:116:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;18903:21:21;::::1;18927:5;18903:21:::0;;;:11:::1;:21;::::0;;;;;:29;;-1:-1:-1;;18903:29:21::1;::::0;;18947:23;::::1;::::0;18927:5;18947:23:::1;18829:148:::0;:::o;29223:239::-;24117:12;;29320:4;;-1:-1:-1;;;;;24117:12:21;24103:10;:26;24082:114;;;;-1:-1:-1;;;24082:114:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;29340:15:21;::::1;29358:5;29340:15:::0;;;:7:::1;:15;::::0;;;;;;;:23;;-1:-1:-1;;29340:23:21::1;::::0;;29373:13:::1;:21:::0;;;;;;:25;;;29413:21;::::1;::::0;29358:5;29413:21:::1;-1:-1:-1::0;29451:4:21::1;24206:1;29223:239:::0;;;:::o;21426:1160::-;21730:11;;-1:-1:-1;;;21730:11:21;;;;21729:12;21721:67;;;;-1:-1:-1;;;21721:67:21;;8956:2:24;21721:67:21;;;8938:21:24;8995:2;8975:18;;;8968:30;9034:34;9014:18;;;9007:62;-1:-1:-1;;;9085:18:24;;;9078:40;9135:19;;21721:67:21;8754:406:24;21721:67:21;-1:-1:-1;;;;;21819:29:21;;21798:123;;;;-1:-1:-1;;;21798:123:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;21952:23:21;;21931:111;;;;-1:-1:-1;;;21931:111:21;;9783:2:24;21931:111:21;;;9765:21:24;9822:2;9802:18;;;9795:30;9861:34;9841:18;;;9834:62;-1:-1:-1;;;9912:18:24;;;9905:39;9961:19;;21931:111:21;9581:405:24;21931:111:21;-1:-1:-1;;;;;22073:28:21;;22052:121;;;;-1:-1:-1;;;22052:121:21;;10193:2:24;22052:121:21;;;10175:21:24;10232:2;10212:18;;;10205:30;10271:34;10251:18;;;10244:62;-1:-1:-1;;;10322:18:24;;;10315:44;10376:19;;22052:121:21;9991:410:24;22052:121:21;-1:-1:-1;;;;;22204:22:21;;22183:109;;;;-1:-1:-1;;;22183:109:21;;10608:2:24;22183:109:21;;;10590:21:24;10647:2;10627:18;;;10620:30;10686:34;10666:18;;;10659:62;-1:-1:-1;;;10737:18:24;;;10730:38;10785:19;;22183:109:21;10406:404:24;22183:109:21;22303:4;:16;22310:9;22303:4;:16;:::i;:::-;-1:-1:-1;22329:6:21;:20;22338:11;22329:6;:20;:::i;:::-;-1:-1:-1;22359:8:21;:24;22370:13;22359:8;:24;:::i;:::-;-1:-1:-1;22393:8:21;:24;;-1:-1:-1;;22393:24:21;;;;;;;22427:12;:30;;-1:-1:-1;;;;;;22427:30:21;;;-1:-1:-1;;;;;22427:30:21;;;;;;;;;;-1:-1:-1;22467:18:21;;;;;;;;;;22495:11;:28;;;;;;;;;;;;;;22533:18;22542:8;22533;:18::i;:::-;-1:-1:-1;;22561:11:21;:18;;-1:-1:-1;;;;22561:18:21;-1:-1:-1;;;22561:18:21;;;-1:-1:-1;;;;;;21426:1160:21:o;15683:94::-;15354:6;;-1:-1:-1;;;;;15354:6:21;15340:10;:20;15332:67;;;;-1:-1:-1;;;15332:67:21;;;;;;;:::i;:::-;15732:6:::1;:14:::0;;-1:-1:-1;;;;15732:14:21::1;::::0;;15761:9:::1;::::0;::::1;::::0;15741:5:::1;::::0;15761:9:::1;15683:94::o:0;23110:840::-;15167:6;;23293:4;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;22721:10:::1;22713:19;::::0;;;:7:::1;:19;::::0;;;;;::::1;;22705:65;;;;-1:-1:-1::0;;;22705:65:21::1;;;;;;;:::i;:::-;23236:10:::2;18121:21;::::0;;;:11:::2;:21;::::0;;;;;::::2;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18121:21:21;::::3;;::::0;;;:11:::3;:21;::::0;;;;;23271:3;;18121:21:::3;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::3;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;23321:17:21;::::4;23313:65;;;::::0;-1:-1:-1;;;23313:65:21;;14026:2:24;23313:65:21::4;::::0;::::4;14008:21:24::0;14065:2;14045:18;;;14038:30;14104:34;14084:18;;;14077:62;-1:-1:-1;;;14155:18:24;;;14148:33;14198:19;;23313:65:21::4;13824:399:24::0;23313:65:21::4;23406:1;23396:7;:11;23388:65;;;::::0;-1:-1:-1;;;23388:65:21;;14430:2:24;23388:65:21::4;::::0;::::4;14412:21:24::0;14469:2;14449:18;;;14442:30;14508:34;14488:18;;;14481:62;-1:-1:-1;;;14559:18:24;;;14552:39;14608:19;;23388:65:21::4;14228:405:24::0;23388:65:21::4;23509:10;23464:28;23495:25:::0;;;:13:::4;:25;::::0;;;;;23551:31;;::::4;;23530:124;;;::::0;-1:-1:-1;;;23530:124:21;;14840:2:24;23530:124:21::4;::::0;::::4;14822:21:24::0;14879:2;14859:18;;;14852:30;14918:34;14898:18;;;14891:62;-1:-1:-1;;;14969:18:24;;;14962:44;15023:19;;23530:124:21::4;14638:410:24::0;23530:124:21::4;23680:12;::::0;:25:::4;::::0;23697:7;23680:16:::4;:25::i;:::-;23665:12;:40:::0;-1:-1:-1;;;;;23731:13:21;::::4;;::::0;;;:8:::4;:13;::::0;;;;;:26:::4;::::0;23749:7;23731:17:::4;:26::i;:::-;-1:-1:-1::0;;;;;23715:13:21;::::4;;::::0;;;:8:::4;:13;::::0;;;;:42;23795:33:::4;:20:::0;23820:7;23795:24:::4;:33::i;:::-;23781:10;23767:25;::::0;;;:13:::4;:25;::::0;;;;;;;;:61;;;;23843:30;1342:25:24;;;-1:-1:-1;;;;;23843:30:21;::::4;::::0;::::4;::::0;1315:18:24;23843:30:21::4;;;;;;;23888:34;::::0;1342:25:24;;;-1:-1:-1;;;;;23888:34:21;::::4;::::0;23905:1:::4;::::0;23888:34:::4;::::0;1330:2:24;1315:18;23888:34:21::4;;;;;;;-1:-1:-1::0;23939:4:21::4;::::0;23110:840;-1:-1:-1;;;;;23110:840:21:o;29751:538::-;15167:6;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;22721:10:::1;22713:19;::::0;;;:7:::1;:19;::::0;;;;;::::1;;22705:65;;;;-1:-1:-1::0;;;22705:65:21::1;;;;;;;:::i;:::-;29864:10:::2;18121:21;::::0;;;:11:::2;:21;::::0;;;;;::::2;;18120:22;18099:106;;;;-1:-1:-1::0;;;18099:106:21::2;;;;;;;:::i;:::-;29917:10:::3;29890:15;29908:20:::0;;;:8:::3;:20;::::0;;;;;29946:11;29938:65:::3;;;::::0;-1:-1:-1;;;29938:65:21;;15255:2:24;29938:65:21::3;::::0;::::3;15237:21:24::0;15294:2;15274:18;;;15267:30;15333:34;15313:18;;;15306:62;-1:-1:-1;;;15384:18:24;;;15377:39;15433:19;;29938:65:21::3;15053:405:24::0;29938:65:21::3;30032:7;30021;:18;;30013:69;;;::::0;-1:-1:-1;;;30013:69:21;;15665:2:24;30013:69:21::3;::::0;::::3;15647:21:24::0;15704:2;15684:18;;;15677:30;15743:34;15723:18;;;15716:62;-1:-1:-1;;;15794:18:24;;;15787:36;15840:19;;30013:69:21::3;15463:402:24::0;30013:69:21::3;30108:12;::::0;:25:::3;::::0;30125:7;30108:16:::3;:25::i;:::-;30093:12;:40:::0;30166:20:::3;:7:::0;30178;30166:11:::3;:20::i;:::-;30152:10;30143:20;::::0;;;:8:::3;:20;::::0;;;;;;:43;;;;30201:25;;::::3;::::0;::::3;::::0;30218:7;1342:25:24;;1330:2;1315:18;;1196:177;30201:25:21::3;;;;;;;;30241:41;::::0;1342:25:24;;;30270:1:21::3;::::0;30250:10:::3;::::0;30241:41:::3;::::0;1330:2:24;1315:18;30241:41:21::3;;;;;;;;29880:409;22780:1:::2;29751:538:::0;:::o;28717:334::-;15167:6;;28868:4;;-1:-1:-1;;;15167:6:21;;;;15166:7;15158:36;;;;-1:-1:-1;;;15158:36:21;;;;;;;:::i;:::-;24117:12:::1;::::0;-1:-1:-1;;;;;24117:12:21::1;24103:10;:26;24082:114;;;;-1:-1:-1::0;;;24082:114:21::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;28888:15:21;::::2;;::::0;;;:7:::2;:15;::::0;;;;;;;:22;;-1:-1:-1;;28888:22:21::2;28906:4;28888:22;::::0;;28920:13:::2;:21:::0;;;;;;:43;;;28978:45;;1342:25:24;;;28978:45:21::2;::::0;1315:18:24;28978:45:21::2;;;;;;;-1:-1:-1::0;29040:4:21::2;24206:1;28717:334:::0;;;;:::o;15834:254::-;12416:6;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;15926:24:21;::::1;15905:111;;;::::0;-1:-1:-1;;;15905:111:21;;16433:2:24;15905:111:21::1;::::0;::::1;16415:21:24::0;16472:2;16452:18;;;16445:30;16511:34;16491:18;;;16484:62;-1:-1:-1;;;16562:18:24;;;16555:38;16610:19;;15905:111:21::1;16231:404:24::0;15905:111:21::1;16026:6;:19:::0;;-1:-1:-1;;;;;;16026:19:21::1;-1:-1:-1::0;;;;;16026:19:21;::::1;::::0;;::::1;::::0;;;16060:21:::1;::::0;::::1;::::0;-1:-1:-1;;16060:21:21::1;15834:254:::0;:::o;272:104:22:-;12416:6:21;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;345:10:22::1;:24:::0;272:104::o;15504:89:21:-;15354:6;;-1:-1:-1;;;;;15354:6:21;15340:10;:20;15332:67;;;;-1:-1:-1;;;15332:67:21;;;;;;;:::i;:::-;15560:4:::1;15551:13:::0;;-1:-1:-1;;;;15551:13:21::1;-1:-1:-1::0;;;15551:13:21::1;::::0;;15579:7:::1;::::0;::::1;::::0;15551:13;;15579:7:::1;15504:89::o:0;20686:20::-;;;;;;;:::i;30295:303::-;12416:6;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;30399:30:21;::::1;30378:124;;;;-1:-1:-1::0;;;30378:124:21::1;;;;;;;:::i;:::-;30512:12;:31:::0;;-1:-1:-1;;;;;;30512:31:21::1;-1:-1:-1::0;;;;;30512:31:21;::::1;::::0;;::::1;::::0;;;30558:33:::1;::::0;::::1;::::0;-1:-1:-1;;30558:33:21::1;30295:303:::0;:::o;18983:299::-;12416:6;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;19085:29:21;::::1;19064:126;;;::::0;-1:-1:-1;;;19064:126:21;;16842:2:24;19064:126:21::1;::::0;::::1;16824:21:24::0;16881:2;16861:18;;;16854:30;16920:34;16900:18;;;16893:62;-1:-1:-1;;;16971:18:24;;;16964:48;17029:19;;19064:126:21::1;16640:414:24::0;19064:126:21::1;19200:11;:29:::0;;-1:-1:-1;;;;;;19200:29:21::1;-1:-1:-1::0;;;;;19200:29:21;::::1;::::0;;::::1;::::0;;;19244:31:::1;::::0;::::1;::::0;-1:-1:-1;;19244:31:21::1;18983:299:::0;:::o;1138:230:22:-;1288:4;1257:12;686:37;698:12;712:10;686:11;:37::i;:::-;678:74;;;;-1:-1:-1;;;678:74:22;;17261:2:24;678:74:22;;;17243:21:24;17300:2;17280:18;;;17273:30;-1:-1:-1;;;17319:18:24;;;17312:55;17384:18;;678:74:22;17059:349:24;678:74:22;1308:32:::1;1318:10;1330:2;1334:5;1308:9;:32::i;776:356::-:0;881:12;686:37;698:12;712:10;686:11;:37::i;:::-;678:74;;;;-1:-1:-1;;;678:74:22;;17261:2:24;678:74:22;;;17243:21:24;17300:2;17280:18;;;17273:30;-1:-1:-1;;;17319:18:24;;;17312:55;17384:18;;678:74:22;17059:349:24;678:74:22;927:1:::1;917:7;:11;909:62;;;::::0;-1:-1:-1;;;909:62:22;;17615:2:24;909:62:22::1;::::0;::::1;17597:21:24::0;17654:2;17634:18;;;17627:30;17693:34;17673:18;;;17666:62;-1:-1:-1;;;17744:18:24;;;17737:36;17790:19;;909:62:22::1;17413:402:24::0;909:62:22::1;1034:12;::::0;:25:::1;::::0;1051:7;1034:16:::1;:25::i;:::-;1019:12;:40:::0;1101:10:::1;1092:20;::::0;;;:8:::1;:20;::::0;;;;;:33:::1;::::0;1117:7;1092:24:::1;:33::i;:::-;1078:10;1069:20;::::0;;;:8:::1;:20;::::0;;;;:56;-1:-1:-1;;;776:356:22:o;20739:22:21:-;;;;;;;:::i;12648:269::-;12416:6;;-1:-1:-1;;;;;12416:6:21;12402:10;:20;12394:65;;;;-1:-1:-1;;;12394:65:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;12743:22:21;::::1;12722:107;;;::::0;-1:-1:-1;;;12722:107:21;;18022:2:24;12722:107:21::1;::::0;::::1;18004:21:24::0;18061:2;18041:18;;;18034:30;18100:34;18080:18;;;18073:62;-1:-1:-1;;;18151:18:24;;;18144:36;18197:19;;12722:107:21::1;17820:402:24::0;12722:107:21::1;12865:6;::::0;12844:38:::1;::::0;;-1:-1:-1;;;;;12865:6:21;;::::1;18439:34:24::0;;18509:15;;;18504:2;18489:18;;18482:43;12844:38:21::1;::::0;18374:18:24;12844:38:21::1;;;;;;;12892:18;12901:8;12892;:18::i;:::-;12648:269:::0;:::o;18557:143::-;17828:11;;-1:-1:-1;;;;;17828:11:21;17814:10;:25;17793:116;;;;-1:-1:-1;;;17793:116:21;;;;;;;:::i;:::-;-1:-1:-1;;;;;18629:21:21;::::1;;::::0;;;:11:::1;:21;::::0;;;;;:28;;-1:-1:-1;;18629:28:21::1;18653:4;18629:28;::::0;;18672:21;::::1;::::0;18629;18672::::1;18557:143:::0;:::o;26209:363::-;-1:-1:-1;;;;;26340:19:21;;26332:68;;;;-1:-1:-1;;;26332:68:21;;18738:2:24;26332:68:21;;;18720:21:24;18777:2;18757:18;;;18750:30;18816:34;18796:18;;;18789:62;-1:-1:-1;;;18867:18:24;;;18860:34;18911:19;;26332:68:21;18536:400:24;26332:68:21;-1:-1:-1;;;;;26418:21:21;;26410:68;;;;-1:-1:-1;;;26410:68:21;;19143:2:24;26410:68:21;;;19125:21:24;19182:2;19162:18;;;19155:30;19221:34;19201:18;;;19194:62;-1:-1:-1;;;19272:18:24;;;19265:32;19314:19;;26410:68:21;18941:398:24;26410:68:21;-1:-1:-1;;;;;26488:14:21;;;;;;;:7;:14;;;;;;;;:23;;;;;;;;;;;;;:31;;;26534;;1342:25:24;;;26534:31:21;;1315:18:24;26534:31:21;1196:177:24;12196:79:21;12251:6;:17;;-1:-1:-1;;;;;;12251:17:21;-1:-1:-1;;;;;12251:17:21;;;;;;;;;;12196:79::o;994:176::-;1052:7;;1083:5;1087:1;1083;:5;:::i;:::-;1071:17;;1111:1;1106;:6;;1098:46;;;;-1:-1:-1;;;1098:46:21;;19808:2:24;1098:46:21;;;19790:21:24;19847:2;19827:18;;;19820:30;19886:29;19866:18;;;19859:57;19933:18;;1098:46:21;19606:351:24;1098:46:21;1162:1;994:176;-1:-1:-1;;;994:176:21:o;1441:134::-;1499:7;1525:43;1529:1;1532;1525:43;;;;;;;;;;;;;;;;;:3;:43::i;382:227:22:-;512:22;;-1:-1:-1;;20111:2:24;20107:15;;;20103:53;512:22:22;;;20091:66:24;471:4:22;;;;20173:12:24;;512:22:22;;;;;;;;;;;;502:33;;;;;;487:48;;552:50;571:12;585:10;;597:4;552:18;:50::i;:::-;545:57;382:227;-1:-1:-1;;;;382:227:22:o;27945:526:21:-;-1:-1:-1;;;;;28071:18:21;;28063:68;;;;-1:-1:-1;;;28063:68:21;;20398:2:24;28063:68:21;;;20380:21:24;20437:2;20417:18;;;20410:30;20476:34;20456:18;;;20449:62;-1:-1:-1;;;20527:18:24;;;20520:35;20572:19;;28063:68:21;20196:401:24;28063:68:21;-1:-1:-1;;;;;28149:16:21;;28141:64;;;;-1:-1:-1;;;28141:64:21;;20804:2:24;28141:64:21;;;20786:21:24;20843:2;20823:18;;;20816:30;20882:34;20862:18;;;20855:62;-1:-1:-1;;;20933:18:24;;;20926:33;20976:19;;28141:64:21;20602:399:24;28141:64:21;-1:-1:-1;;;;;28245:14:21;;;;;;:8;:14;;;;;;28236:23;;;28215:108;;;;-1:-1:-1;;;28215:108:21;;21208:2:24;28215:108:21;;;21190:21:24;21247:2;21227:18;;;21220:30;21286:34;21266:18;;;21259:62;-1:-1:-1;;;21337:18:24;;;21330:36;21383:19;;28215:108:21;21006:402:24;28215:108:21;-1:-1:-1;;;;;28351:14:21;;;;;;:8;:14;;;;;;:25;;28370:5;28351:18;:25::i;:::-;-1:-1:-1;;;;;28334:14:21;;;;;;;:8;:14;;;;;;:42;;;;28401:12;;;;;;;:23;;28418:5;28401:16;:23::i;:::-;-1:-1:-1;;;;;28386:12:21;;;;;;;:8;:12;;;;;;;:38;;;;28439:25;;;;;;;;;;28458:5;1342:25:24;;1330:2;1315:18;;1196:177;1866:217:21;1982:7;2017:12;2009:6;;;;2001:29;;;;-1:-1:-1;;;2001:29:21;;;;;;;;:::i;:::-;-1:-1:-1;2040:9:21;2052:5;2056:1;2052;:5;:::i;:::-;2040:17;1866:217;-1:-1:-1;;;;;1866:217:21:o;1265:154:20:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;;1265:154;-1:-1:-1;;;;1265:154:20:o;1967:290::-;2050:7;2092:4;2050:7;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;2178:9;:33::i;:::-;2163:48;-1:-1:-1;2144:3:20;;;;:::i;:::-;;;;2106:116;;;-1:-1:-1;2238:12:20;1967:290;-1:-1:-1;;;1967:290:20:o;9229:147::-;9292:7;9322:1;9318;:5;:51;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9318:51;;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9326:20;9496:261;14:548:24;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:24;;674:42;;664:70;;730:1;727;720:12;745:254;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:24:o;1378:186::-;1437:6;1490:2;1478:9;1469:7;1465:23;1461:32;1458:52;;;1506:1;1503;1496:12;1458:52;1529:29;1548:9;1529:29;:::i;1569:328::-;1646:6;1654;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1754:29;1773:9;1754:29;:::i;:::-;1744:39;;1802:38;1836:2;1825:9;1821:18;1802:38;:::i;:::-;1792:48;;1887:2;1876:9;1872:18;1859:32;1849:42;;1569:328;;;;;:::o;2091:127::-;2152:10;2147:3;2143:20;2140:1;2133:31;2183:4;2180:1;2173:15;2207:4;2204:1;2197:15;2223:275;2294:2;2288:9;2359:2;2340:13;;-1:-1:-1;;2336:27:24;2324:40;;2394:18;2379:34;;2415:22;;;2376:62;2373:88;;;2441:18;;:::i;:::-;2477:2;2470:22;2223:275;;-1:-1:-1;2223:275:24:o;2503:531::-;2546:5;2599:3;2592:4;2584:6;2580:17;2576:27;2566:55;;2617:1;2614;2607:12;2566:55;2653:6;2640:20;2679:18;2675:2;2672:26;2669:52;;;2701:18;;:::i;:::-;2745:55;2788:2;2769:13;;-1:-1:-1;;2765:27:24;2794:4;2761:38;2745:55;:::i;:::-;2825:2;2816:7;2809:19;2871:3;2864:4;2859:2;2851:6;2847:15;2843:26;2840:35;2837:55;;;2888:1;2885;2878:12;2837:55;2953:2;2946:4;2938:6;2934:17;2927:4;2918:7;2914:18;2901:55;3001:1;2976:16;;;2994:4;2972:27;2965:38;;;;2980:7;2503:531;-1:-1:-1;;;2503:531:24:o;3039:156::-;3105:20;;3165:4;3154:16;;3144:27;;3134:55;;3185:1;3182;3175:12;3200:1114;3350:6;3358;3366;3374;3382;3390;3398;3406;3459:3;3447:9;3438:7;3434:23;3430:33;3427:53;;;3476:1;3473;3466:12;3427:53;3516:9;3503:23;3545:18;3586:2;3578:6;3575:14;3572:34;;;3602:1;3599;3592:12;3572:34;3625:50;3667:7;3658:6;3647:9;3643:22;3625:50;:::i;:::-;3615:60;;3728:2;3717:9;3713:18;3700:32;3684:48;;3757:2;3747:8;3744:16;3741:36;;;3773:1;3770;3763:12;3741:36;3796:52;3840:7;3829:8;3818:9;3814:24;3796:52;:::i;:::-;3786:62;;3901:2;3890:9;3886:18;3873:32;3857:48;;3930:2;3920:8;3917:16;3914:36;;;3946:1;3943;3936:12;3914:36;;3969:52;4013:7;4002:8;3991:9;3987:24;3969:52;:::i;:::-;3959:62;;;4040:36;4072:2;4061:9;4057:18;4040:36;:::i;:::-;4030:46;;4095:39;4129:3;4118:9;4114:19;4095:39;:::i;:::-;4085:49;;4153:39;4187:3;4176:9;4172:19;4153:39;:::i;:::-;4143:49;;4211:39;4245:3;4234:9;4230:19;4211:39;:::i;:::-;4201:49;;4269:39;4303:3;4292:9;4288:19;4269:39;:::i;:::-;4259:49;;3200:1114;;;;;;;;;;;:::o;4527:180::-;4586:6;4639:2;4627:9;4618:7;4614:23;4610:32;4607:52;;;4655:1;4652;4645:12;4607:52;-1:-1:-1;4678:23:24;;4527:180;-1:-1:-1;4527:180:24:o;4897:712::-;4951:5;5004:3;4997:4;4989:6;4985:17;4981:27;4971:55;;5022:1;5019;5012:12;4971:55;5058:6;5045:20;5084:4;5107:18;5103:2;5100:26;5097:52;;;5129:18;;:::i;:::-;5175:2;5172:1;5168:10;5198:28;5222:2;5218;5214:11;5198:28;:::i;:::-;5260:15;;;5330;;;5326:24;;;5291:12;;;;5362:15;;;5359:35;;;5390:1;5387;5380:12;5359:35;5426:2;5418:6;5414:15;5403:26;;5438:142;5454:6;5449:3;5446:15;5438:142;;;5520:17;;5508:30;;5471:12;;;;5558;;;;5438:142;;;5598:5;4897:712;-1:-1:-1;;;;;;;4897:712:24:o;5614:490::-;5716:6;5724;5732;5785:2;5773:9;5764:7;5760:23;5756:32;5753:52;;;5801:1;5798;5791:12;5753:52;5824:29;5843:9;5824:29;:::i;:::-;5814:39;;5900:2;5889:9;5885:18;5872:32;5862:42;;5955:2;5944:9;5940:18;5927:32;5982:18;5974:6;5971:30;5968:50;;;6014:1;6011;6004:12;5968:50;6037:61;6090:7;6081:6;6070:9;6066:22;6037:61;:::i;:::-;6027:71;;;5614:490;;;;;:::o;6109:416::-;6202:6;6210;6263:2;6251:9;6242:7;6238:23;6234:32;6231:52;;;6279:1;6276;6269:12;6231:52;6315:9;6302:23;6292:33;;6376:2;6365:9;6361:18;6348:32;6403:18;6395:6;6392:30;6389:50;;;6435:1;6432;6425:12;6389:50;6458:61;6511:7;6502:6;6491:9;6487:22;6458:61;:::i;:::-;6448:71;;;6109:416;;;;;:::o;6530:260::-;6598:6;6606;6659:2;6647:9;6638:7;6634:23;6630:32;6627:52;;;6675:1;6672;6665:12;6627:52;6698:29;6717:9;6698:29;:::i;:::-;6688:39;;6746:38;6780:2;6769:9;6765:18;6746:38;:::i;:::-;6736:48;;6530:260;;;;;:::o;6795:380::-;6874:1;6870:12;;;;6917;;;6938:61;;6992:4;6984:6;6980:17;6970:27;;6938:61;7045:2;7037:6;7034:14;7014:18;7011:38;7008:161;;7091:10;7086:3;7082:20;7079:1;7072:31;7126:4;7123:1;7116:15;7154:4;7151:1;7144:15;7008:161;;6795:380;;;:::o;7180:340::-;7382:2;7364:21;;;7421:2;7401:18;;;7394:30;-1:-1:-1;;;7455:2:24;7440:18;;7433:46;7511:2;7496:18;;7180:340::o;7525:401::-;7727:2;7709:21;;;7766:2;7746:18;;;7739:30;7805:34;7800:2;7785:18;;7778:62;-1:-1:-1;;;7871:2:24;7856:18;;7849:35;7916:3;7901:19;;7525:401::o;7931:408::-;8133:2;8115:21;;;8172:2;8152:18;;;8145:30;8211:34;8206:2;8191:18;;8184:62;-1:-1:-1;;;8277:2:24;8262:18;;8255:42;8329:3;8314:19;;7931:408::o;8344:405::-;8546:2;8528:21;;;8585:2;8565:18;;;8558:30;8624:34;8619:2;8604:18;;8597:62;-1:-1:-1;;;8690:2:24;8675:18;;8668:39;8739:3;8724:19;;8344:405::o;9165:411::-;9367:2;9349:21;;;9406:2;9386:18;;;9379:30;9445:34;9440:2;9425:18;;9418:62;-1:-1:-1;;;9511:2:24;9496:18;;9489:45;9566:3;9551:19;;9165:411::o;10941:545::-;11043:2;11038:3;11035:11;11032:448;;;11079:1;11104:5;11100:2;11093:17;11149:4;11145:2;11135:19;11219:2;11207:10;11203:19;11200:1;11196:27;11190:4;11186:38;11255:4;11243:10;11240:20;11237:47;;;-1:-1:-1;11278:4:24;11237:47;11333:2;11328:3;11324:12;11321:1;11317:20;11311:4;11307:31;11297:41;;11388:82;11406:2;11399:5;11396:13;11388:82;;;11451:17;;;11432:1;11421:13;11388:82;;;11392:3;;;11032:448;10941:545;;;:::o;11662:1352::-;11788:3;11782:10;11815:18;11807:6;11804:30;11801:56;;;11837:18;;:::i;:::-;11866:97;11956:6;11916:38;11948:4;11942:11;11916:38;:::i;:::-;11910:4;11866:97;:::i;:::-;12018:4;;12082:2;12071:14;;12099:1;12094:663;;;;12801:1;12818:6;12815:89;;;-1:-1:-1;12870:19:24;;;12864:26;12815:89;-1:-1:-1;;11619:1:24;11615:11;;;11611:24;11607:29;11597:40;11643:1;11639:11;;;11594:57;12917:81;;12064:944;;12094:663;10888:1;10881:14;;;10925:4;10912:18;;-1:-1:-1;;12130:20:24;;;12248:236;12262:7;12259:1;12256:14;12248:236;;;12351:19;;;12345:26;12330:42;;12443:27;;;;12411:1;12399:14;;;;12278:19;;12248:236;;;12252:3;12512:6;12503:7;12500:19;12497:201;;;12573:19;;;12567:26;-1:-1:-1;;12656:1:24;12652:14;;;12668:3;12648:24;12644:37;12640:42;12625:58;12610:74;;12497:201;-1:-1:-1;;;;;12744:1:24;12728:14;;;12724:22;12711:36;;-1:-1:-1;11662:1352:24:o;13019:398::-;13221:2;13203:21;;;13260:2;13240:18;;;13233:30;13299:34;13294:2;13279:18;;13272:62;-1:-1:-1;;;13365:2:24;13350:18;;13343:32;13407:3;13392:19;;13019:398::o;13422:397::-;13624:2;13606:21;;;13663:2;13643:18;;;13636:30;13702:34;13697:2;13682:18;;13675:62;-1:-1:-1;;;13768:2:24;13753:18;;13746:31;13809:3;13794:19;;13422:397::o;15870:356::-;16072:2;16054:21;;;16091:18;;;16084:30;16150:34;16145:2;16130:18;;16123:62;16217:2;16202:18;;15870:356::o;19344:127::-;19405:10;19400:3;19396:20;19393:1;19386:31;19436:4;19433:1;19426:15;19460:4;19457:1;19450:15;19476:125;19541:9;;;19562:10;;;19559:36;;;19575:18;;:::i;21413:128::-;21480:9;;;21501:11;;;21498:37;;;21515:18;;:::i;21546:127::-;21607:10;21602:3;21598:20;21595:1;21588:31;21638:4;21635:1;21628:15;21662:4;21659:1;21652:15;21678:135;21717:3;21738:17;;;21735:43;;21758:18;;:::i;:::-;-1:-1:-1;21805:1:24;21794:13;;21678:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "blacklist(address)": "f9f92be4",
    "blacklister()": "bd102430",
    "burn(uint256)": "42966c68",
    "configureMinter(address,uint256)": "4e44d956",
    "currency()": "e5a6b10f",
    "decimals()": "313ce567",
    "initialize(string,string,string,uint8,address,address,address,address)": "3357162b",
    "isBlacklisted(address)": "fe575a87",
    "isMinter(address)": "aa271e1a",
    "masterMinter()": "35d99f35",
    "mint(address,uint256)": "40c10f19",
    "mintV2(uint256,bytes32[])": "cb171800",
    "minterAllowance(address)": "8a6db9c3",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "pauser()": "9fd0506d",
    "removeMinter(address)": "3092afd5",
    "setMerkleRoot(bytes32)": "7cb64759",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "transferV2(address,uint256,bytes32[])": "c76e5b2b",
    "unBlacklist(address)": "1a895266",
    "unpause()": "3f4ba83a",
    "updateBlacklister(address)": "ad38bf22",
    "updateMasterMinter(address)": "aa20e1e4",
    "updatePauser(address)": "554bab3c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"}],\"name\":\"BlacklisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"}],\"name\":\"MasterMinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"MinterConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMinter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PauserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"UnBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blacklister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"configureMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenCurrency\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mintV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"minterAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"transferV2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBlacklister\",\"type\":\"address\"}],\"name\":\"updateBlacklister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMasterMinter\",\"type\":\"address\"}],\"name\":\"updateMasterMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPauser\",\"type\":\"address\"}],\"name\":\"updatePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"Event to show ownership has been transferred\",\"params\":{\"newOwner\":\"representing the address of the new owner\",\"previousOwner\":\"representing the address of the previous owner\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"Token owner's address\",\"spender\":\"Spender's address\"},\"returns\":{\"_0\":\"Allowance amount\"}},\"approve(address,uint256)\":{\"params\":{\"spender\":\"Spender's address\",\"value\":\"Allowance amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"balanceOf(address)\":{\"details\":\"Get token balance of an account\",\"params\":{\"account\":\"address The account\"}},\"blacklist(address)\":{\"details\":\"Adds account to blacklist\",\"params\":{\"_account\":\"The address to blacklist\"}},\"burn(uint256)\":{\"details\":\"allows a minter to burn some of its own tokens Validates that caller is a minter and that sender is not blacklisted amount is less than or equal to the minter's account balance\",\"params\":{\"_amount\":\"uint256 the amount of tokens to be burned\"}},\"configureMinter(address,uint256)\":{\"details\":\"Function to add/update a new minter\",\"params\":{\"minter\":\"The address of the minter\",\"minterAllowedAmount\":\"The minting amount allowed for the minter\"},\"returns\":{\"_0\":\"True if the operation was successful.\"}},\"isBlacklisted(address)\":{\"details\":\"Checks if account is blacklisted\",\"params\":{\"_account\":\"The address to check\"}},\"isMinter(address)\":{\"details\":\"Checks if account is a minter\",\"params\":{\"account\":\"The address to check\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.\",\"_to\":\"The address that will receive the minted tokens.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"minterAllowance(address)\":{\"details\":\"Get minter allowance for an account\",\"params\":{\"minter\":\"The address of the minter\"}},\"owner()\":{\"details\":\"Tells the address of the owner\",\"returns\":{\"_0\":\"the address of the owner\"}},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"removeMinter(address)\":{\"details\":\"Function to remove a minter\",\"params\":{\"minter\":\"The address of the minter to remove\"},\"returns\":{\"_0\":\"True if the operation was successful.\"}},\"totalSupply()\":{\"details\":\"Get totalSupply of token\"},\"transfer(address,uint256)\":{\"params\":{\"to\":\"Payee's address\",\"value\":\"Transfer amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"from\":\"Payer's address\",\"to\":\"Payee's address\",\"value\":\"Transfer amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unBlacklist(address)\":{\"details\":\"Removes account from blacklist\",\"params\":{\"_account\":\"The address to remove from the blacklist\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"},\"updatePauser(address)\":{\"details\":\"update the pauser role\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Amount of remaining tokens spender is allowed to transfer on behalf of the token owner\"},\"approve(address,uint256)\":{\"notice\":\"Set spender's allowance over the caller's tokens to be a given value.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens from the caller\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer tokens by spending allowance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/UsdcV2.sol\":\"UsdcV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":oz/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x93794b4a8dade2025ed0299cc5b5f0d817651e96f7d1ae10792d9f129f05c01b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cd9ac1b228ba68e9e8f9c8ffe60c97692255fbc5bcf6f3e3d47f236d996de6a\",\"dweb:/ipfs/QmS6auQ875SGESX7YDt2mBy3g6YjdDagnfLHMNTbxcyRce\"]},\"src/UsdcV1.sol\":{\"keccak256\":\"0x8c027d6b59ad7c99a0b71868efe970e4684aa4d2ef17cdfb94b60ca67d51dbdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55054070d22fd52834c26e7b17a50d65ca00d72b42c47669282d30eb28134728\",\"dweb:/ipfs/Qmbh2PZDiYcV3rqj65MUuh4HRam3qjbAMA9E1LiXqZm7Ds\"]},\"src/UsdcV2.sol\":{\"keccak256\":\"0x2f342329a40bea9cfe9d2a43d610c9653a21dde72de6aa7779ee5ab377e0b87a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fea47a4ca7758727d5af1a53053e4b8ba8e42ee9a75dbe7783e553270bb85c57\",\"dweb:/ipfs/QmXvvfHVE8btK1Pwmi4SWU7Qp51RhMbT5VxbEcEU32BDA5\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Blacklisted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newBlacklister",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BlacklisterChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "burner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newMasterMinter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MasterMinterChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "minterAllowedAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinterConfigured",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldMinter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "Pause",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PauserChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UnBlacklisted",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "Unpause",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "blacklist"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blacklister",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minterAllowedAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "configureMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currency",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenCurrency",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "tokenDecimals",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "newMasterMinter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newPauser",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newBlacklister",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBlacklisted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "masterMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "_merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintV2"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minterAllowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_merkleRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMerkleRoot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "_merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferV2",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unBlacklist"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newBlacklister",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBlacklister"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newMasterMinter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMasterMinter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newPauser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePauser"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "params": {
              "owner": "Token owner's address",
              "spender": "Spender's address"
            },
            "returns": {
              "_0": "Allowance amount"
            }
          },
          "approve(address,uint256)": {
            "params": {
              "spender": "Spender's address",
              "value": "Allowance amount"
            },
            "returns": {
              "_0": "True if successful"
            }
          },
          "balanceOf(address)": {
            "details": "Get token balance of an account",
            "params": {
              "account": "address The account"
            }
          },
          "blacklist(address)": {
            "details": "Adds account to blacklist",
            "params": {
              "_account": "The address to blacklist"
            }
          },
          "burn(uint256)": {
            "details": "allows a minter to burn some of its own tokens Validates that caller is a minter and that sender is not blacklisted amount is less than or equal to the minter's account balance",
            "params": {
              "_amount": "uint256 the amount of tokens to be burned"
            }
          },
          "configureMinter(address,uint256)": {
            "details": "Function to add/update a new minter",
            "params": {
              "minter": "The address of the minter",
              "minterAllowedAmount": "The minting amount allowed for the minter"
            },
            "returns": {
              "_0": "True if the operation was successful."
            }
          },
          "isBlacklisted(address)": {
            "details": "Checks if account is blacklisted",
            "params": {
              "_account": "The address to check"
            }
          },
          "isMinter(address)": {
            "details": "Checks if account is a minter",
            "params": {
              "account": "The address to check"
            }
          },
          "mint(address,uint256)": {
            "details": "Function to mint tokens",
            "params": {
              "_amount": "The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.",
              "_to": "The address that will receive the minted tokens."
            },
            "returns": {
              "_0": "A boolean that indicates if the operation was successful."
            }
          },
          "minterAllowance(address)": {
            "details": "Get minter allowance for an account",
            "params": {
              "minter": "The address of the minter"
            }
          },
          "owner()": {
            "details": "Tells the address of the owner",
            "returns": {
              "_0": "the address of the owner"
            }
          },
          "pause()": {
            "details": "called by the owner to pause, triggers stopped state"
          },
          "removeMinter(address)": {
            "details": "Function to remove a minter",
            "params": {
              "minter": "The address of the minter to remove"
            },
            "returns": {
              "_0": "True if the operation was successful."
            }
          },
          "totalSupply()": {
            "details": "Get totalSupply of token"
          },
          "transfer(address,uint256)": {
            "params": {
              "to": "Payee's address",
              "value": "Transfer amount"
            },
            "returns": {
              "_0": "True if successful"
            }
          },
          "transferFrom(address,address,uint256)": {
            "params": {
              "from": "Payer's address",
              "to": "Payee's address",
              "value": "Transfer amount"
            },
            "returns": {
              "_0": "True if successful"
            }
          },
          "transferOwnership(address)": {
            "details": "Allows the current owner to transfer control of the contract to a newOwner.",
            "params": {
              "newOwner": "The address to transfer ownership to."
            }
          },
          "unBlacklist(address)": {
            "details": "Removes account from blacklist",
            "params": {
              "_account": "The address to remove from the blacklist"
            }
          },
          "unpause()": {
            "details": "called by the owner to unpause, returns to normal state"
          },
          "updatePauser(address)": {
            "details": "update the pauser role"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowance(address,address)": {
            "notice": "Amount of remaining tokens spender is allowed to transfer on behalf of the token owner"
          },
          "approve(address,uint256)": {
            "notice": "Set spender's allowance over the caller's tokens to be a given value."
          },
          "transfer(address,uint256)": {
            "notice": "Transfer tokens from the caller"
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Transfer tokens by spending allowance"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "murky/=lib/murky/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "oz/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/UsdcV2.sol": "UsdcV2"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x93794b4a8dade2025ed0299cc5b5f0d817651e96f7d1ae10792d9f129f05c01b",
        "urls": [
          "bzz-raw://2cd9ac1b228ba68e9e8f9c8ffe60c97692255fbc5bcf6f3e3d47f236d996de6a",
          "dweb:/ipfs/QmS6auQ875SGESX7YDt2mBy3g6YjdDagnfLHMNTbxcyRce"
        ],
        "license": "MIT"
      },
      "src/UsdcV1.sol": {
        "keccak256": "0x8c027d6b59ad7c99a0b71868efe970e4684aa4d2ef17cdfb94b60ca67d51dbdd",
        "urls": [
          "bzz-raw://55054070d22fd52834c26e7b17a50d65ca00d72b42c47669282d30eb28134728",
          "dweb:/ipfs/Qmbh2PZDiYcV3rqj65MUuh4HRam3qjbAMA9E1LiXqZm7Ds"
        ],
        "license": "MIT"
      },
      "src/UsdcV2.sol": {
        "keccak256": "0x2f342329a40bea9cfe9d2a43d610c9653a21dde72de6aa7779ee5ab377e0b87a",
        "urls": [
          "bzz-raw://fea47a4ca7758727d5af1a53053e4b8ba8e42ee9a75dbe7783e553270bb85c57",
          "dweb:/ipfs/QmXvvfHVE8btK1Pwmi4SWU7Qp51RhMbT5VxbEcEU32BDA5"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/UsdcV2.sol",
    "id": 47409,
    "exportedSymbols": {
      "FiatTokenV1": [
        45789
      ],
      "MerkleProof": [
        44422
      ],
      "SafeMath": [
        44618
      ],
      "UsdcV2": [
        47408
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1566:22",
    "nodes": [
      {
        "id": 47253,
        "nodeType": "PragmaDirective",
        "src": "39:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 47256,
        "nodeType": "ImportDirective",
        "src": "64:53:22",
        "nodes": [],
        "absolutePath": "src/UsdcV1.sol",
        "file": "./UsdcV1.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47409,
        "sourceUnit": 47252,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47254,
              "name": "FiatTokenV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45789,
              "src": "73:11:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47255,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44618,
              "src": "86:8:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47257,
        "nodeType": "ImportDirective",
        "src": "118:47:22",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "oz/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47409,
        "sourceUnit": 44423,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47408,
        "nodeType": "ContractDefinition",
        "src": "168:1435:22",
        "nodes": [
          {
            "id": 47262,
            "nodeType": "UsingForDirective",
            "src": "204:27:22",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 47260,
              "name": "SafeMath",
              "nameLocations": [
                "210:8:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44618,
              "src": "210:8:22"
            },
            "typeName": {
              "id": 47261,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "223:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 47264,
            "nodeType": "VariableDeclaration",
            "src": "236:26:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "252:10:22",
            "scope": 47408,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47263,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "236:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47276,
            "nodeType": "FunctionDefinition",
            "src": "272:104:22",
            "nodes": [],
            "body": {
              "id": 47275,
              "nodeType": "Block",
              "src": "335:41:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47271,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47264,
                      "src": "345:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47272,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47266,
                      "src": "358:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "345:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 47274,
                  "nodeType": "ExpressionStatement",
                  "src": "345:24:22"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47269,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47268,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "325:9:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44771,
                  "src": "325:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "325:9:22"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "281:13:22",
            "parameters": {
              "id": 47267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47266,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "303:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47276,
                  "src": "295:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47265,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:21:22"
            },
            "returnParameters": {
              "id": 47270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:22"
            },
            "scope": 47408,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47303,
            "nodeType": "FunctionDefinition",
            "src": "382:227:22",
            "nodes": [],
            "body": {
              "id": 47302,
              "nodeType": "Block",
              "src": "477:132:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47287,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "495:4:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 47302,
                      "src": "487:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 47286,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "487:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47294,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47291,
                            "name": "_who",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47281,
                            "src": "529:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 47289,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "512:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 47290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "516:12:22",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "512:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 47292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "512:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 47288,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "502:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 47293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "502:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "487:48:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47297,
                        "name": "_merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47279,
                        "src": "571:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 47298,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47264,
                        "src": "585:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 47299,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47287,
                        "src": "597:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 47295,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44422,
                        "src": "552:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$44422_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 47296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "564:6:22",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43912,
                      "src": "552:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                      }
                    },
                    "id": 47300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:50:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 47285,
                  "id": 47301,
                  "nodeType": "Return",
                  "src": "545:57:22"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inWhitelist",
            "nameLocation": "391:11:22",
            "parameters": {
              "id": 47282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47279,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "420:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47303,
                  "src": "403:29:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47277,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "403:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47278,
                    "nodeType": "ArrayTypeName",
                    "src": "403:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47281,
                  "mutability": "mutable",
                  "name": "_who",
                  "nameLocation": "442:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47303,
                  "src": "434:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "402:45:22"
            },
            "returnParameters": {
              "id": 47285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47284,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47303,
                  "src": "471:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47283,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "470:6:22"
            },
            "scope": 47408,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47319,
            "nodeType": "ModifierDefinition",
            "src": "614:156:22",
            "nodes": [],
            "body": {
              "id": 47318,
              "nodeType": "Block",
              "src": "668:102:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47310,
                            "name": "_merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47306,
                            "src": "698:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 47311,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "712:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "716:6:22",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "712:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47309,
                          "name": "inWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47303,
                          "src": "686:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,address) view returns (bool)"
                          }
                        },
                        "id": 47313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "686:37:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57686974656c6973743a20496e76616c69642070726f6f662e",
                        "id": 47314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "724:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90d71eb995701acb987c158c79923740c41e7f299898711eb18a9c57db67b4f8",
                          "typeString": "literal_string \"Whitelist: Invalid proof.\""
                        },
                        "value": "Whitelist: Invalid proof."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90d71eb995701acb987c158c79923740c41e7f299898711eb18a9c57db67b4f8",
                          "typeString": "literal_string \"Whitelist: Invalid proof.\""
                        }
                      ],
                      "id": 47308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "678:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:74:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47316,
                  "nodeType": "ExpressionStatement",
                  "src": "678:74:22"
                },
                {
                  "id": 47317,
                  "nodeType": "PlaceholderStatement",
                  "src": "762:1:22"
                }
              ]
            },
            "name": "onlyWhitelist",
            "nameLocation": "623:13:22",
            "parameters": {
              "id": 47307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47306,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "654:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47319,
                  "src": "637:29:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47304,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "637:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47305,
                    "nodeType": "ArrayTypeName",
                    "src": "637:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "636:31:22"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47358,
            "nodeType": "FunctionDefinition",
            "src": "776:356:22",
            "nodes": [],
            "body": {
              "id": 47357,
              "nodeType": "Block",
              "src": "899:233:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 47333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 47331,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47321,
                          "src": "917:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 47332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "927:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "917:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7456323a206d696e7420616d6f756e74206e6f742067726561746572207468616e2030",
                        "id": 47334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "930:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1c4479e5db466115382e8903a2f3170aab407a244adca9f111faf746b65219c",
                          "typeString": "literal_string \"mintV2: mint amount not greater than 0\""
                        },
                        "value": "mintV2: mint amount not greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1c4479e5db466115382e8903a2f3170aab407a244adca9f111faf746b65219c",
                          "typeString": "literal_string \"mintV2: mint amount not greater than 0\""
                        }
                      ],
                      "id": 47330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "909:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "909:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47336,
                  "nodeType": "ExpressionStatement",
                  "src": "909:62:22"
                },
                {
                  "expression": {
                    "id": 47342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47337,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45063,
                      "src": "1019:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47340,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47321,
                          "src": "1051:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 47338,
                          "name": "totalSupply_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45063,
                          "src": "1034:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1047:3:22",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44451,
                        "src": "1034:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 47341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1034:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1019:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47343,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:40:22"
                },
                {
                  "expression": {
                    "id": 47355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47344,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45054,
                        "src": "1069:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 47347,
                      "indexExpression": {
                        "expression": {
                          "id": 47345,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1078:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1082:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1078:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1069:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47353,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47321,
                          "src": "1117:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 47348,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45054,
                            "src": "1092:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 47351,
                          "indexExpression": {
                            "expression": {
                              "id": 47349,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1101:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1105:6:22",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1101:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1092:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1113:3:22",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44451,
                        "src": "1092:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 47354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1092:33:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1069:56:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47356,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:56:22"
                }
              ]
            },
            "functionSelector": "cb171800",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 47327,
                    "name": "_merkleProof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47324,
                    "src": "881:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  }
                ],
                "id": 47328,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47326,
                  "name": "onlyWhitelist",
                  "nameLocations": [
                    "867:13:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47319,
                  "src": "867:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "867:27:22"
              }
            ],
            "name": "mintV2",
            "nameLocation": "785:6:22",
            "parameters": {
              "id": 47325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47321,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "800:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47358,
                  "src": "792:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47324,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "826:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47358,
                  "src": "809:29:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47322,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "809:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47323,
                    "nodeType": "ArrayTypeName",
                    "src": "809:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:48:22"
            },
            "returnParameters": {
              "id": 47329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:22"
            },
            "scope": 47408,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47383,
            "nodeType": "FunctionDefinition",
            "src": "1138:230:22",
            "nodes": [],
            "body": {
              "id": 47382,
              "nodeType": "Block",
              "src": "1298:70:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47374,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1318:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1322:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1318:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47376,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47360,
                        "src": "1330:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47377,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47362,
                        "src": "1334:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47373,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45630
                      ],
                      "referencedDeclaration": 45630,
                      "src": "1308:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 47378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1308:32:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47379,
                  "nodeType": "ExpressionStatement",
                  "src": "1308:32:22"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 47380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1357:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 47372,
                  "id": 47381,
                  "nodeType": "Return",
                  "src": "1350:11:22"
                }
              ]
            },
            "functionSelector": "c76e5b2b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 47368,
                    "name": "_merkleProof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47365,
                    "src": "1257:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  }
                ],
                "id": 47369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47367,
                  "name": "onlyWhitelist",
                  "nameLocations": [
                    "1243:13:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47319,
                  "src": "1243:13:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1243:27:22"
              }
            ],
            "name": "transferV2",
            "nameLocation": "1147:10:22",
            "parameters": {
              "id": 47366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47360,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1166:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47383,
                  "src": "1158:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47362,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1178:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47383,
                  "src": "1170:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47365,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "1202:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47383,
                  "src": "1185:29:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47363,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1185:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 47364,
                    "nodeType": "ArrayTypeName",
                    "src": "1185:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1157:58:22"
            },
            "returnParameters": {
              "id": 47372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47383,
                  "src": "1288:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47370,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:6:22"
            },
            "scope": 47408,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47394,
            "nodeType": "FunctionDefinition",
            "src": "1419:80:22",
            "nodes": [],
            "body": {
              "id": 47393,
              "nodeType": "Block",
              "src": "1497:2:22",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              45561
            ],
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1428:8:22",
            "overrides": {
              "id": 47389,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1473:8:22"
            },
            "parameters": {
              "id": 47388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47385,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1445:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47394,
                  "src": "1437:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47387,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1457:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47394,
                  "src": "1449:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1436:27:22"
            },
            "returnParameters": {
              "id": 47392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47391,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47394,
                  "src": "1491:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47390,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1491:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1490:6:22"
            },
            "scope": 47408,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47407,
            "nodeType": "FunctionDefinition",
            "src": "1504:96:22",
            "nodes": [],
            "body": {
              "id": 47406,
              "nodeType": "Block",
              "src": "1598:2:22",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              45532
            ],
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1513:12:22",
            "overrides": {
              "id": 47402,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1574:8:22"
            },
            "parameters": {
              "id": 47401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47396,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1534:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47407,
                  "src": "1526:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47398,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1547:2:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47407,
                  "src": "1539:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47400,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1558:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 47407,
                  "src": "1550:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1525:39:22"
            },
            "returnParameters": {
              "id": 47405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47404,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47407,
                  "src": "1592:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1591:6:22"
            },
            "scope": 47408,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47258,
              "name": "FiatTokenV1",
              "nameLocations": [
                "187:11:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45789,
              "src": "187:11:22"
            },
            "id": 47259,
            "nodeType": "InheritanceSpecifier",
            "src": "187:11:22"
          }
        ],
        "canonicalName": "UsdcV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47408,
          45789,
          45025,
          44897,
          44800,
          44717,
          44695
        ],
        "name": "UsdcV2",
        "nameLocation": "177:6:22",
        "scope": 47409,
        "usedErrors": [],
        "usedEvents": [
          44685,
          44694,
          44728,
          44806,
          44808,
          44812,
          44911,
          44915,
          44919,
          45079,
          45085,
          45091,
          45095,
          45099
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}